// SPDX-License-Identifier: MIT
    pragma solidity ^0.8.17;

    contract Verifier {
        function verify(
            uint256[] memory pubInputs,
            bytes memory proof
        ) public view returns (bool) {
            bool success = true;
            bytes32[944] memory transcript;
            assembly {                    let f_p := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47                    let f_q := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001                    function validate_ec_point(x, y) -> valid {                        {                            let x_lt_p := lt(x, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            let y_lt_p := lt(y, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            valid := and(x_lt_p, y_lt_p)                        }                        {                            let y_square := mulmod(y, y, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            let x_square := mulmod(x, x, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            let x_cube := mulmod(x_square, x, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            let x_cube_plus_3 := addmod(x_cube, 3, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            let is_affine := eq(x_cube_plus_3, y_square)                            valid := and(valid, is_affine)                        }                    }                    mstore(add(transcript, 0x20), mod(mload(add(pubInputs, 0x20)), f_q))mstore(add(transcript, 0x40), mod(mload(add(pubInputs, 0x40)), f_q))mstore(add(transcript, 0x60), mod(mload(add(pubInputs, 0x60)), f_q))mstore(add(transcript, 0x0), 15813215475178423041221812156333551979875692990139112009724063370849291856448)        {            let x := mload(add(proof, 0x20))            mstore(add(transcript, 0x80), x)            let y := mload(add(proof, 0x40))            mstore(add(transcript, 0xa0), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x60))            mstore(add(transcript, 0xc0), x)            let y := mload(add(proof, 0x80))            mstore(add(transcript, 0xe0), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0xa0))            mstore(add(transcript, 0x100), x)            let y := mload(add(proof, 0xc0))            mstore(add(transcript, 0x120), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0x140), keccak256(add(transcript, 0x0), 320)){            let hash := mload(add(transcript, 0x140))            mstore(add(transcript, 0x160), mod(hash, f_q))            mstore(add(transcript, 0x180), hash)        }        {            let x := mload(add(proof, 0xe0))            mstore(add(transcript, 0x1a0), x)            let y := mload(add(proof, 0x100))            mstore(add(transcript, 0x1c0), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x120))            mstore(add(transcript, 0x1e0), x)            let y := mload(add(proof, 0x140))            mstore(add(transcript, 0x200), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0x220), keccak256(add(transcript, 0x180), 160)){            let hash := mload(add(transcript, 0x220))            mstore(add(transcript, 0x240), mod(hash, f_q))            mstore(add(transcript, 0x260), hash)        }mstore8(add(transcript, 0x280), 1)mstore(add(transcript, 0x280), keccak256(add(transcript, 0x260), 33)){            let hash := mload(add(transcript, 0x280))            mstore(add(transcript, 0x2a0), mod(hash, f_q))            mstore(add(transcript, 0x2c0), hash)        }        {            let x := mload(add(proof, 0x160))            mstore(add(transcript, 0x2e0), x)            let y := mload(add(proof, 0x180))            mstore(add(transcript, 0x300), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x1a0))            mstore(add(transcript, 0x320), x)            let y := mload(add(proof, 0x1c0))            mstore(add(transcript, 0x340), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x1e0))            mstore(add(transcript, 0x360), x)            let y := mload(add(proof, 0x200))            mstore(add(transcript, 0x380), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x220))            mstore(add(transcript, 0x3a0), x)            let y := mload(add(proof, 0x240))            mstore(add(transcript, 0x3c0), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0x3e0), keccak256(add(transcript, 0x2c0), 288)){            let hash := mload(add(transcript, 0x3e0))            mstore(add(transcript, 0x400), mod(hash, f_q))            mstore(add(transcript, 0x420), hash)        }        {            let x := mload(add(proof, 0x260))            mstore(add(transcript, 0x440), x)            let y := mload(add(proof, 0x280))            mstore(add(transcript, 0x460), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x2a0))            mstore(add(transcript, 0x480), x)            let y := mload(add(proof, 0x2c0))            mstore(add(transcript, 0x4a0), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x2e0))            mstore(add(transcript, 0x4c0), x)            let y := mload(add(proof, 0x300))            mstore(add(transcript, 0x4e0), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x320))            mstore(add(transcript, 0x500), x)            let y := mload(add(proof, 0x340))            mstore(add(transcript, 0x520), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x360))            mstore(add(transcript, 0x540), x)            let y := mload(add(proof, 0x380))            mstore(add(transcript, 0x560), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0x580), keccak256(add(transcript, 0x420), 352)){            let hash := mload(add(transcript, 0x580))            mstore(add(transcript, 0x5a0), mod(hash, f_q))            mstore(add(transcript, 0x5c0), hash)        }mstore(add(transcript, 0x5e0), mod(mload(add(proof, 0x3a0)), f_q))mstore(add(transcript, 0x600), mod(mload(add(proof, 0x3c0)), f_q))mstore(add(transcript, 0x620), mod(mload(add(proof, 0x3e0)), f_q))mstore(add(transcript, 0x640), mod(mload(add(proof, 0x400)), f_q))mstore(add(transcript, 0x660), mod(mload(add(proof, 0x420)), f_q))mstore(add(transcript, 0x680), mod(mload(add(proof, 0x440)), f_q))mstore(add(transcript, 0x6a0), mod(mload(add(proof, 0x460)), f_q))mstore(add(transcript, 0x6c0), mod(mload(add(proof, 0x480)), f_q))mstore(add(transcript, 0x6e0), mod(mload(add(proof, 0x4a0)), f_q))mstore(add(transcript, 0x700), mod(mload(add(proof, 0x4c0)), f_q))mstore(add(transcript, 0x720), mod(mload(add(proof, 0x4e0)), f_q))mstore(add(transcript, 0x740), mod(mload(add(proof, 0x500)), f_q))mstore(add(transcript, 0x760), mod(mload(add(proof, 0x520)), f_q))mstore(add(transcript, 0x780), mod(mload(add(proof, 0x540)), f_q))mstore(add(transcript, 0x7a0), mod(mload(add(proof, 0x560)), f_q))mstore(add(transcript, 0x7c0), mod(mload(add(proof, 0x580)), f_q))mstore(add(transcript, 0x7e0), mod(mload(add(proof, 0x5a0)), f_q))mstore(add(transcript, 0x800), mod(mload(add(proof, 0x5c0)), f_q))mstore(add(transcript, 0x820), mod(mload(add(proof, 0x5e0)), f_q))mstore(add(transcript, 0x840), mod(mload(add(proof, 0x600)), f_q))mstore(add(transcript, 0x860), mod(mload(add(proof, 0x620)), f_q))mstore(add(transcript, 0x880), mod(mload(add(proof, 0x640)), f_q))mstore(add(transcript, 0x8a0), mod(mload(add(proof, 0x660)), f_q))mstore(add(transcript, 0x8c0), mod(mload(add(proof, 0x680)), f_q))mstore(add(transcript, 0x8e0), mod(mload(add(proof, 0x6a0)), f_q))mstore(add(transcript, 0x900), mod(mload(add(proof, 0x6c0)), f_q))mstore(add(transcript, 0x920), mod(mload(add(proof, 0x6e0)), f_q))mstore(add(transcript, 0x940), mod(mload(add(proof, 0x700)), f_q))mstore(add(transcript, 0x960), mod(mload(add(proof, 0x720)), f_q))mstore(add(transcript, 0x980), mod(mload(add(proof, 0x740)), f_q))mstore(add(transcript, 0x9a0), mod(mload(add(proof, 0x760)), f_q))mstore(add(transcript, 0x9c0), mod(mload(add(proof, 0x780)), f_q))mstore(add(transcript, 0x9e0), mod(mload(add(proof, 0x7a0)), f_q))mstore(add(transcript, 0xa00), mod(mload(add(proof, 0x7c0)), f_q))mstore(add(transcript, 0xa20), mod(mload(add(proof, 0x7e0)), f_q))mstore(add(transcript, 0xa40), mod(mload(add(proof, 0x800)), f_q))mstore(add(transcript, 0xa60), mod(mload(add(proof, 0x820)), f_q))mstore(add(transcript, 0xa80), mod(mload(add(proof, 0x840)), f_q))mstore(add(transcript, 0xaa0), mod(mload(add(proof, 0x860)), f_q))mstore(add(transcript, 0xac0), keccak256(add(transcript, 0x5c0), 1280)){            let hash := mload(add(transcript, 0xac0))            mstore(add(transcript, 0xae0), mod(hash, f_q))            mstore(add(transcript, 0xb00), hash)        }mstore8(add(transcript, 0xb20), 1)mstore(add(transcript, 0xb20), keccak256(add(transcript, 0xb00), 33)){            let hash := mload(add(transcript, 0xb20))            mstore(add(transcript, 0xb40), mod(hash, f_q))            mstore(add(transcript, 0xb60), hash)        }        {            let x := mload(add(proof, 0x880))            mstore(add(transcript, 0xb80), x)            let y := mload(add(proof, 0x8a0))            mstore(add(transcript, 0xba0), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0xbc0), keccak256(add(transcript, 0xb60), 96)){            let hash := mload(add(transcript, 0xbc0))            mstore(add(transcript, 0xbe0), mod(hash, f_q))            mstore(add(transcript, 0xc00), hash)        }        {            let x := mload(add(proof, 0x8c0))            mstore(add(transcript, 0xc20), x)            let y := mload(add(proof, 0x8e0))            mstore(add(transcript, 0xc40), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0xc60), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x5a0)), f_q))mstore(add(transcript, 0xc80), mulmod(mload(add(transcript, 0xc60)), mload(add(transcript, 0xc60)), f_q))mstore(add(transcript, 0xca0), mulmod(mload(add(transcript, 0xc80)), mload(add(transcript, 0xc80)), f_q))mstore(add(transcript, 0xcc0), mulmod(mload(add(transcript, 0xca0)), mload(add(transcript, 0xca0)), f_q))mstore(add(transcript, 0xce0), mulmod(mload(add(transcript, 0xcc0)), mload(add(transcript, 0xcc0)), f_q))mstore(add(transcript, 0xd00), mulmod(mload(add(transcript, 0xce0)), mload(add(transcript, 0xce0)), f_q))mstore(add(transcript, 0xd20), mulmod(mload(add(transcript, 0xd00)), mload(add(transcript, 0xd00)), f_q))mstore(add(transcript, 0xd40), mulmod(mload(add(transcript, 0xd20)), mload(add(transcript, 0xd20)), f_q))mstore(add(transcript, 0xd60), mulmod(mload(add(transcript, 0xd40)), mload(add(transcript, 0xd40)), f_q))mstore(add(transcript, 0xd80), mulmod(mload(add(transcript, 0xd60)), mload(add(transcript, 0xd60)), f_q))mstore(add(transcript, 0xda0), addmod(mload(add(transcript, 0xd80)), 21888242871839275222246405745257275088548364400416034343698204186575808495616, f_q))mstore(add(transcript, 0xdc0), mulmod(mload(add(transcript, 0xda0)), 21866867634659744680037180739646672280844703888306253060159436409049855557633, f_q))mstore(add(transcript, 0xde0), mulmod(mload(add(transcript, 0xdc0)), 21487619741887049518823228776094213266513706733682665306796560993386997753783, f_q))mstore(add(transcript, 0xe00), addmod(mload(add(transcript, 0x5a0)), 400623129952225703423176969163061822034657666733369036901643193188810741834, f_q))mstore(add(transcript, 0xe20), mulmod(mload(add(transcript, 0xdc0)), 18658909205715493985327367002986689246357274798059125448824250603171843521466, f_q))mstore(add(transcript, 0xe40), addmod(mload(add(transcript, 0x5a0)), 3229333666123781236919038742270585842191089602356908894873953583403964974151, f_q))mstore(add(transcript, 0xe60), mulmod(mload(add(transcript, 0xdc0)), 6049870342818402906991837230471695860693013911339248404212111056725500339689, f_q))mstore(add(transcript, 0xe80), addmod(mload(add(transcript, 0x5a0)), 15838372529020872315254568514785579227855350489076785939486093129850308155928, f_q))mstore(add(transcript, 0xea0), mulmod(mload(add(transcript, 0xdc0)), 13677048343952077794467995888380402608453928821079198134318291065290235358859, f_q))mstore(add(transcript, 0xec0), addmod(mload(add(transcript, 0x5a0)), 8211194527887197427778409856876872480094435579336836209379913121285573136758, f_q))mstore(add(transcript, 0xee0), mulmod(mload(add(transcript, 0xdc0)), 17441530497276410801425079580926443307744058978973998229533345407034924067026, f_q))mstore(add(transcript, 0xf00), addmod(mload(add(transcript, 0x5a0)), 4446712374562864420821326164330831780804305421442036114164858779540884428591, f_q))mstore(add(transcript, 0xf20), mulmod(mload(add(transcript, 0xdc0)), 9936069627611189518829255670237324269287146421271524553312532036927871056678, f_q))mstore(add(transcript, 0xf40), addmod(mload(add(transcript, 0x5a0)), 11952173244228085703417150075019950819261217979144509790385672149647937438939, f_q))mstore(add(transcript, 0xf60), mulmod(mload(add(transcript, 0xdc0)), 1680739780407307830605919050682431078078760076686599579086116998224280619988, f_q))mstore(add(transcript, 0xf80), addmod(mload(add(transcript, 0x5a0)), 20207503091431967391640486694574844010469604323729434764612087188351527875629, f_q))mstore(add(transcript, 0xfa0), mulmod(mload(add(transcript, 0xdc0)), 14158528901797138466244491986759313854666262535363044392173788062030301470987, f_q))mstore(add(transcript, 0xfc0), addmod(mload(add(transcript, 0x5a0)), 7729713970042136756001913758497961233882101865052989951524416124545507024630, f_q))mstore(add(transcript, 0xfe0), mulmod(mload(add(transcript, 0xdc0)), 15699029810934084314820646074566828280617789951162923449200398535581206172418, f_q))mstore(add(transcript, 0x1000), addmod(mload(add(transcript, 0x5a0)), 6189213060905190907425759670690446807930574449253110894497805650994602323199, f_q))mstore(add(transcript, 0x1020), mulmod(mload(add(transcript, 0xdc0)), 4260969412351770314333984243767775737437927068151180798236715529158398853173, f_q))mstore(add(transcript, 0x1040), addmod(mload(add(transcript, 0x5a0)), 17627273459487504907912421501489499351110437332264853545461488657417409642444, f_q))mstore(add(transcript, 0x1060), mulmod(mload(add(transcript, 0xdc0)), 4925592601992654644734291590386747644864797672605745962807370354577123815907, f_q))mstore(add(transcript, 0x1080), addmod(mload(add(transcript, 0x5a0)), 16962650269846620577512114154870527443683566727810288380890833831998684679710, f_q))mstore(add(transcript, 0x10a0), mulmod(mload(add(transcript, 0xdc0)), 1, f_q))mstore(add(transcript, 0x10c0), addmod(mload(add(transcript, 0x5a0)), 21888242871839275222246405745257275088548364400416034343698204186575808495616, f_q))mstore(add(transcript, 0x10e0), mulmod(mload(add(transcript, 0xdc0)), 19380560087801265747114831706136320509424814679569278834391540198888293317501, f_q))mstore(add(transcript, 0x1100), addmod(mload(add(transcript, 0x5a0)), 2507682784038009475131574039120954579123549720846755509306663987687515178116, f_q))mstore(add(transcript, 0x1120), mulmod(mload(add(transcript, 0xdc0)), 6252951856119339508807713076978770803512896272623217303779254502899773638908, f_q))mstore(add(transcript, 0x1140), addmod(mload(add(transcript, 0x5a0)), 15635291015719935713438692668278504285035468127792817039918949683676034856709, f_q)){            let prod := mload(add(transcript, 0xe00))                prod := mulmod(mload(add(transcript, 0xe40)), prod, f_q)                mstore(add(transcript, 0x1160), prod)                            prod := mulmod(mload(add(transcript, 0xe80)), prod, f_q)                mstore(add(transcript, 0x1180), prod)                            prod := mulmod(mload(add(transcript, 0xec0)), prod, f_q)                mstore(add(transcript, 0x11a0), prod)                            prod := mulmod(mload(add(transcript, 0xf00)), prod, f_q)                mstore(add(transcript, 0x11c0), prod)                            prod := mulmod(mload(add(transcript, 0xf40)), prod, f_q)                mstore(add(transcript, 0x11e0), prod)                            prod := mulmod(mload(add(transcript, 0xf80)), prod, f_q)                mstore(add(transcript, 0x1200), prod)                            prod := mulmod(mload(add(transcript, 0xfc0)), prod, f_q)                mstore(add(transcript, 0x1220), prod)                            prod := mulmod(mload(add(transcript, 0x1000)), prod, f_q)                mstore(add(transcript, 0x1240), prod)                            prod := mulmod(mload(add(transcript, 0x1040)), prod, f_q)                mstore(add(transcript, 0x1260), prod)                            prod := mulmod(mload(add(transcript, 0x1080)), prod, f_q)                mstore(add(transcript, 0x1280), prod)                            prod := mulmod(mload(add(transcript, 0x10c0)), prod, f_q)                mstore(add(transcript, 0x12a0), prod)                            prod := mulmod(mload(add(transcript, 0x1100)), prod, f_q)                mstore(add(transcript, 0x12c0), prod)                            prod := mulmod(mload(add(transcript, 0x1140)), prod, f_q)                mstore(add(transcript, 0x12e0), prod)                            prod := mulmod(mload(add(transcript, 0xda0)), prod, f_q)                mstore(add(transcript, 0x1300), prod)                    }mstore(add(transcript, 0x1340), 32)mstore(add(transcript, 0x1360), 32)mstore(add(transcript, 0x1380), 32)mstore(add(transcript, 0x13a0), mload(add(transcript, 0x1300)))mstore(add(transcript, 0x13c0), 21888242871839275222246405745257275088548364400416034343698204186575808495615)mstore(add(transcript, 0x13e0), 21888242871839275222246405745257275088548364400416034343698204186575808495617)success := and(eq(staticcall(gas(), 0x5, add(transcript, 0x1340), 0xc0, add(transcript, 0x1320), 0x20), 1), success){                        let inv := mload(add(transcript, 0x1320))            let v                            v := mload(add(transcript, 0xda0))                    mstore(add(transcript, 0xda0), mulmod(mload(add(transcript, 0x12e0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x1140))                    mstore(add(transcript, 0x1140), mulmod(mload(add(transcript, 0x12c0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x1100))                    mstore(add(transcript, 0x1100), mulmod(mload(add(transcript, 0x12a0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x10c0))                    mstore(add(transcript, 0x10c0), mulmod(mload(add(transcript, 0x1280)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x1080))                    mstore(add(transcript, 0x1080), mulmod(mload(add(transcript, 0x1260)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x1040))                    mstore(add(transcript, 0x1040), mulmod(mload(add(transcript, 0x1240)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x1000))                    mstore(add(transcript, 0x1000), mulmod(mload(add(transcript, 0x1220)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xfc0))                    mstore(add(transcript, 0xfc0), mulmod(mload(add(transcript, 0x1200)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xf80))                    mstore(add(transcript, 0xf80), mulmod(mload(add(transcript, 0x11e0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xf40))                    mstore(add(transcript, 0xf40), mulmod(mload(add(transcript, 0x11c0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xf00))                    mstore(add(transcript, 0xf00), mulmod(mload(add(transcript, 0x11a0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xec0))                    mstore(add(transcript, 0xec0), mulmod(mload(add(transcript, 0x1180)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xe80))                    mstore(add(transcript, 0xe80), mulmod(mload(add(transcript, 0x1160)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xe40))                    mstore(add(transcript, 0xe40), mulmod(mload(add(transcript, 0xe00)), inv, f_q))                    inv := mulmod(v, inv, f_q)                mstore(add(transcript, 0xe00), inv)        }mstore(add(transcript, 0x1400), mulmod(mload(add(transcript, 0xde0)), mload(add(transcript, 0xe00)), f_q))mstore(add(transcript, 0x1420), mulmod(mload(add(transcript, 0xe20)), mload(add(transcript, 0xe40)), f_q))mstore(add(transcript, 0x1440), mulmod(mload(add(transcript, 0xe60)), mload(add(transcript, 0xe80)), f_q))mstore(add(transcript, 0x1460), mulmod(mload(add(transcript, 0xea0)), mload(add(transcript, 0xec0)), f_q))mstore(add(transcript, 0x1480), mulmod(mload(add(transcript, 0xee0)), mload(add(transcript, 0xf00)), f_q))mstore(add(transcript, 0x14a0), mulmod(mload(add(transcript, 0xf20)), mload(add(transcript, 0xf40)), f_q))mstore(add(transcript, 0x14c0), mulmod(mload(add(transcript, 0xf60)), mload(add(transcript, 0xf80)), f_q))mstore(add(transcript, 0x14e0), mulmod(mload(add(transcript, 0xfa0)), mload(add(transcript, 0xfc0)), f_q))mstore(add(transcript, 0x1500), mulmod(mload(add(transcript, 0xfe0)), mload(add(transcript, 0x1000)), f_q))mstore(add(transcript, 0x1520), mulmod(mload(add(transcript, 0x1020)), mload(add(transcript, 0x1040)), f_q))mstore(add(transcript, 0x1540), mulmod(mload(add(transcript, 0x1060)), mload(add(transcript, 0x1080)), f_q))mstore(add(transcript, 0x1560), mulmod(mload(add(transcript, 0x10a0)), mload(add(transcript, 0x10c0)), f_q))mstore(add(transcript, 0x1580), mulmod(mload(add(transcript, 0x10e0)), mload(add(transcript, 0x1100)), f_q))mstore(add(transcript, 0x15a0), mulmod(mload(add(transcript, 0x1120)), mload(add(transcript, 0x1140)), f_q)){            let result := mulmod(mload(add(transcript, 0x1560)), mload(add(transcript, 0x20)), f_q)result := addmod(mulmod(mload(add(transcript, 0x1580)), mload(add(transcript, 0x40)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x15a0)), mload(add(transcript, 0x60)), f_q), result, f_q)mstore(add(transcript, 0x15c0), result)        }mstore(add(transcript, 0x15e0), addmod(mload(add(transcript, 0x5e0)), mload(add(transcript, 0x7e0)), f_q))mstore(add(transcript, 0x1600), mulmod(mload(add(transcript, 0x15e0)), mload(add(transcript, 0x15e0)), f_q))mstore(add(transcript, 0x1620), mulmod(mload(add(transcript, 0x1600)), mload(add(transcript, 0x1600)), f_q))mstore(add(transcript, 0x1640), mulmod(mload(add(transcript, 0x15e0)), mload(add(transcript, 0x1620)), f_q))mstore(add(transcript, 0x1660), mulmod(mload(add(transcript, 0x1640)), 2910766817845651019878574839501801340070030115151021261302834310722729507541, f_q))mstore(add(transcript, 0x1680), addmod(mload(add(transcript, 0x600)), mload(add(transcript, 0x800)), f_q))mstore(add(transcript, 0x16a0), mulmod(mload(add(transcript, 0x1680)), mload(add(transcript, 0x1680)), f_q))mstore(add(transcript, 0x16c0), mulmod(mload(add(transcript, 0x16a0)), mload(add(transcript, 0x16a0)), f_q))mstore(add(transcript, 0x16e0), mulmod(mload(add(transcript, 0x1680)), mload(add(transcript, 0x16c0)), f_q))mstore(add(transcript, 0x1700), mulmod(mload(add(transcript, 0x16e0)), 19727366863391167538122140361473584127147630672623100827934084310230022599144, f_q))mstore(add(transcript, 0x1720), addmod(mload(add(transcript, 0x1660)), mload(add(transcript, 0x1700)), f_q))mstore(add(transcript, 0x1740), addmod(mload(add(transcript, 0x1720)), sub(f_q, mload(add(transcript, 0x620))), f_q))mstore(add(transcript, 0x1760), mulmod(mload(add(transcript, 0x1740)), mload(add(transcript, 0x860)), f_q))mstore(add(transcript, 0x1780), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x1760)), f_q))mstore(add(transcript, 0x17a0), mulmod(mload(add(transcript, 0x1640)), 5776684794125549462448597414050232243778680302179439492664047328281728356345, f_q))mstore(add(transcript, 0x17c0), mulmod(mload(add(transcript, 0x16e0)), 8348174920934122550483593999453880006756108121341067172388445916328941978568, f_q))mstore(add(transcript, 0x17e0), addmod(mload(add(transcript, 0x17a0)), mload(add(transcript, 0x17c0)), f_q))mstore(add(transcript, 0x1800), addmod(mload(add(transcript, 0x17e0)), sub(f_q, mload(add(transcript, 0x640))), f_q))mstore(add(transcript, 0x1820), mulmod(mload(add(transcript, 0x1800)), mload(add(transcript, 0x860)), f_q))mstore(add(transcript, 0x1840), addmod(mload(add(transcript, 0x1780)), mload(add(transcript, 0x1820)), f_q))mstore(add(transcript, 0x1860), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x1840)), f_q))mstore(add(transcript, 0x1880), addmod(mload(add(transcript, 0x1640)), sub(f_q, mload(add(transcript, 0x660))), f_q))mstore(add(transcript, 0x18a0), mulmod(mload(add(transcript, 0x1880)), mload(add(transcript, 0x880)), f_q))mstore(add(transcript, 0x18c0), addmod(mload(add(transcript, 0x1860)), mload(add(transcript, 0x18a0)), f_q))mstore(add(transcript, 0x18e0), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x18c0)), f_q))mstore(add(transcript, 0x1900), mulmod(mload(add(transcript, 0x660)), 2910766817845651019878574839501801340070030115151021261302834310722729507541, f_q))mstore(add(transcript, 0x1920), mulmod(mload(add(transcript, 0x1680)), 19727366863391167538122140361473584127147630672623100827934084310230022599144, f_q))mstore(add(transcript, 0x1940), addmod(mload(add(transcript, 0x1900)), mload(add(transcript, 0x1920)), f_q))mstore(add(transcript, 0x1960), addmod(mload(add(transcript, 0x1940)), mload(add(transcript, 0x7a0)), f_q))mstore(add(transcript, 0x1980), mulmod(mload(add(transcript, 0x1960)), mload(add(transcript, 0x1960)), f_q))mstore(add(transcript, 0x19a0), mulmod(mload(add(transcript, 0x1980)), mload(add(transcript, 0x1980)), f_q))mstore(add(transcript, 0x19c0), mulmod(mload(add(transcript, 0x1960)), mload(add(transcript, 0x19a0)), f_q))mstore(add(transcript, 0x19e0), mulmod(mload(add(transcript, 0x620)), 8897705321156975119607866206188469715432233408805434913352778521345836531302, f_q))mstore(add(transcript, 0x1a00), mulmod(mload(add(transcript, 0x640)), 13897810991298242824030978581179475767377101082166056046492926701399149797630, f_q))mstore(add(transcript, 0x1a20), addmod(mload(add(transcript, 0x19e0)), mload(add(transcript, 0x1a00)), f_q))mstore(add(transcript, 0x1a40), addmod(mload(add(transcript, 0x19c0)), sub(f_q, mload(add(transcript, 0x1a20))), f_q))mstore(add(transcript, 0x1a60), mulmod(mload(add(transcript, 0x1a40)), mload(add(transcript, 0x880)), f_q))mstore(add(transcript, 0x1a80), addmod(mload(add(transcript, 0x18e0)), mload(add(transcript, 0x1a60)), f_q))mstore(add(transcript, 0x1aa0), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x1a80)), f_q))mstore(add(transcript, 0x1ac0), mulmod(mload(add(transcript, 0x660)), 5776684794125549462448597414050232243778680302179439492664047328281728356345, f_q))mstore(add(transcript, 0x1ae0), mulmod(mload(add(transcript, 0x1680)), 8348174920934122550483593999453880006756108121341067172388445916328941978568, f_q))mstore(add(transcript, 0x1b00), addmod(mload(add(transcript, 0x1ac0)), mload(add(transcript, 0x1ae0)), f_q))mstore(add(transcript, 0x1b20), addmod(mload(add(transcript, 0x1b00)), mload(add(transcript, 0x7c0)), f_q))mstore(add(transcript, 0x1b40), mulmod(mload(add(transcript, 0x620)), 7127083008168878795310303301757642617203533252990949589494537404444738046722, f_q))mstore(add(transcript, 0x1b60), mulmod(mload(add(transcript, 0x640)), 10251091711782631878897995303436082826711938358699127319815611151510940403902, f_q))mstore(add(transcript, 0x1b80), addmod(mload(add(transcript, 0x1b40)), mload(add(transcript, 0x1b60)), f_q))mstore(add(transcript, 0x1ba0), addmod(mload(add(transcript, 0x1b20)), sub(f_q, mload(add(transcript, 0x1b80))), f_q))mstore(add(transcript, 0x1bc0), mulmod(mload(add(transcript, 0x1ba0)), mload(add(transcript, 0x880)), f_q))mstore(add(transcript, 0x1be0), addmod(mload(add(transcript, 0x1aa0)), mload(add(transcript, 0x1bc0)), f_q))mstore(add(transcript, 0x1c00), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x1be0)), f_q))mstore(add(transcript, 0x1c20), addmod(1, sub(f_q, mload(add(transcript, 0x840))), f_q))mstore(add(transcript, 0x1c40), mulmod(mload(add(transcript, 0x1c20)), mload(add(transcript, 0x840)), f_q))mstore(add(transcript, 0x1c60), addmod(2, sub(f_q, mload(add(transcript, 0x840))), f_q))mstore(add(transcript, 0x1c80), mulmod(mload(add(transcript, 0x1c60)), mload(add(transcript, 0x1c40)), f_q))mstore(add(transcript, 0x1ca0), addmod(3, sub(f_q, mload(add(transcript, 0x840))), f_q))mstore(add(transcript, 0x1cc0), mulmod(mload(add(transcript, 0x1ca0)), mload(add(transcript, 0x1c80)), f_q))mstore(add(transcript, 0x1ce0), addmod(mload(add(transcript, 0x6a0)), mload(add(transcript, 0x5e0)), f_q))mstore(add(transcript, 0x1d00), addmod(mload(add(transcript, 0x1ce0)), sub(f_q, mload(add(transcript, 0x620))), f_q))mstore(add(transcript, 0x1d20), mulmod(mload(add(transcript, 0x1d00)), mload(add(transcript, 0x1cc0)), f_q))mstore(add(transcript, 0x1d40), addmod(mload(add(transcript, 0x1c00)), mload(add(transcript, 0x1d20)), f_q))mstore(add(transcript, 0x1d60), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x1d40)), f_q))mstore(add(transcript, 0x1d80), addmod(mload(add(transcript, 0x680)), sub(f_q, mload(add(transcript, 0x640))), f_q))mstore(add(transcript, 0x1da0), mulmod(mload(add(transcript, 0x1d80)), mload(add(transcript, 0x1cc0)), f_q))mstore(add(transcript, 0x1dc0), addmod(mload(add(transcript, 0x1d60)), mload(add(transcript, 0x1da0)), f_q))mstore(add(transcript, 0x1de0), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x1dc0)), f_q))mstore(add(transcript, 0x1e00), mulmod(mload(add(transcript, 0x1c60)), mload(add(transcript, 0x840)), f_q))mstore(add(transcript, 0x1e20), mulmod(mload(add(transcript, 0x1ca0)), mload(add(transcript, 0x1e00)), f_q))mstore(add(transcript, 0x1e40), addmod(4, sub(f_q, mload(add(transcript, 0x840))), f_q))mstore(add(transcript, 0x1e60), mulmod(mload(add(transcript, 0x1e40)), mload(add(transcript, 0x1e20)), f_q))mstore(add(transcript, 0x1e80), mulmod(mload(add(transcript, 0x660)), mload(add(transcript, 0x1e60)), f_q))mstore(add(transcript, 0x1ea0), addmod(1, sub(f_q, mload(add(transcript, 0x660))), f_q))mstore(add(transcript, 0x1ec0), mulmod(mload(add(transcript, 0x1ea0)), mload(add(transcript, 0x1e80)), f_q))mstore(add(transcript, 0x1ee0), addmod(mload(add(transcript, 0x1de0)), mload(add(transcript, 0x1ec0)), f_q))mstore(add(transcript, 0x1f00), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x1ee0)), f_q))mstore(add(transcript, 0x1f20), addmod(mload(add(transcript, 0x620)), sub(f_q, mload(add(transcript, 0x5e0))), f_q))mstore(add(transcript, 0x1f40), addmod(mload(add(transcript, 0x600)), sub(f_q, mload(add(transcript, 0x640))), f_q))mstore(add(transcript, 0x1f60), addmod(mload(add(transcript, 0x1f20)), sub(f_q, mload(add(transcript, 0x1f40))), f_q))mstore(add(transcript, 0x1f80), mulmod(mload(add(transcript, 0x1f60)), mload(add(transcript, 0x1e80)), f_q))mstore(add(transcript, 0x1fa0), addmod(mload(add(transcript, 0x1f00)), mload(add(transcript, 0x1f80)), f_q))mstore(add(transcript, 0x1fc0), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x1fa0)), f_q))mstore(add(transcript, 0x1fe0), mulmod(mload(add(transcript, 0x1ca0)), mload(add(transcript, 0x1c40)), f_q))mstore(add(transcript, 0x2000), mulmod(mload(add(transcript, 0x1e40)), mload(add(transcript, 0x1fe0)), f_q))mstore(add(transcript, 0x2020), addmod(mload(add(transcript, 0x5e0)), mload(add(transcript, 0x600)), f_q))mstore(add(transcript, 0x2040), addmod(mload(add(transcript, 0x2020)), sub(f_q, mload(add(transcript, 0x660))), f_q))mstore(add(transcript, 0x2060), mulmod(mload(add(transcript, 0x2040)), mload(add(transcript, 0x2000)), f_q))mstore(add(transcript, 0x2080), addmod(mload(add(transcript, 0x1fc0)), mload(add(transcript, 0x2060)), f_q))mstore(add(transcript, 0x20a0), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x2080)), f_q))mstore(add(transcript, 0x20c0), addmod(mload(add(transcript, 0x20a0)), mload(add(transcript, 0x2060)), f_q))mstore(add(transcript, 0x20e0), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x20c0)), f_q))mstore(add(transcript, 0x2100), mulmod(mload(add(transcript, 0x1e40)), mload(add(transcript, 0x1c80)), f_q))mstore(add(transcript, 0x2120), addmod(mload(add(transcript, 0x6a0)), sub(f_q, mload(add(transcript, 0x5e0))), f_q))mstore(add(transcript, 0x2140), mulmod(mload(add(transcript, 0x660)), 1, f_q))mstore(add(transcript, 0x2160), addmod(0, mload(add(transcript, 0x2140)), f_q))mstore(add(transcript, 0x2180), mulmod(mload(add(transcript, 0x6c0)), 256, f_q))mstore(add(transcript, 0x21a0), addmod(mload(add(transcript, 0x2160)), mload(add(transcript, 0x2180)), f_q))mstore(add(transcript, 0x21c0), mulmod(mload(add(transcript, 0x6e0)), 65536, f_q))mstore(add(transcript, 0x21e0), addmod(mload(add(transcript, 0x21a0)), mload(add(transcript, 0x21c0)), f_q))mstore(add(transcript, 0x2200), mulmod(mload(add(transcript, 0x700)), 16777216, f_q))mstore(add(transcript, 0x2220), addmod(mload(add(transcript, 0x21e0)), mload(add(transcript, 0x2200)), f_q))mstore(add(transcript, 0x2240), mulmod(mload(add(transcript, 0x720)), 4294967296, f_q))mstore(add(transcript, 0x2260), addmod(mload(add(transcript, 0x2220)), mload(add(transcript, 0x2240)), f_q))mstore(add(transcript, 0x2280), mulmod(mload(add(transcript, 0x740)), 1099511627776, f_q))mstore(add(transcript, 0x22a0), addmod(mload(add(transcript, 0x2260)), mload(add(transcript, 0x2280)), f_q))mstore(add(transcript, 0x22c0), mulmod(mload(add(transcript, 0x760)), 281474976710656, f_q))mstore(add(transcript, 0x22e0), addmod(mload(add(transcript, 0x22a0)), mload(add(transcript, 0x22c0)), f_q))mstore(add(transcript, 0x2300), mulmod(mload(add(transcript, 0x780)), 72057594037927936, f_q))mstore(add(transcript, 0x2320), addmod(mload(add(transcript, 0x22e0)), mload(add(transcript, 0x2300)), f_q))mstore(add(transcript, 0x2340), addmod(mload(add(transcript, 0x2120)), sub(f_q, mload(add(transcript, 0x2320))), f_q))mstore(add(transcript, 0x2360), mulmod(mload(add(transcript, 0x600)), 18446744073709551616, f_q))mstore(add(transcript, 0x2380), addmod(mload(add(transcript, 0x2340)), mload(add(transcript, 0x2360)), f_q))mstore(add(transcript, 0x23a0), mulmod(mload(add(transcript, 0x2380)), mload(add(transcript, 0x2100)), f_q))mstore(add(transcript, 0x23c0), addmod(mload(add(transcript, 0x20e0)), mload(add(transcript, 0x23a0)), f_q))mstore(add(transcript, 0x23e0), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x23c0)), f_q))mstore(add(transcript, 0x2400), addmod(1, sub(f_q, mload(add(transcript, 0x600))), f_q))mstore(add(transcript, 0x2420), mulmod(mload(add(transcript, 0x2400)), mload(add(transcript, 0x600)), f_q))mstore(add(transcript, 0x2440), mulmod(mload(add(transcript, 0x2420)), mload(add(transcript, 0x2100)), f_q))mstore(add(transcript, 0x2460), addmod(mload(add(transcript, 0x23e0)), mload(add(transcript, 0x2440)), f_q))mstore(add(transcript, 0x2480), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x2460)), f_q))mstore(add(transcript, 0x24a0), addmod(mload(add(transcript, 0x600)), 21888242871839275222246405745257275088548364400416034343698204186575808495616, f_q))mstore(add(transcript, 0x24c0), mulmod(mload(add(transcript, 0x24a0)), mload(add(transcript, 0x2100)), f_q))mstore(add(transcript, 0x24e0), addmod(mload(add(transcript, 0x2480)), mload(add(transcript, 0x24c0)), f_q))mstore(add(transcript, 0x2500), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x24e0)), f_q))mstore(add(transcript, 0x2520), addmod(1, sub(f_q, mload(add(transcript, 0x980))), f_q))mstore(add(transcript, 0x2540), mulmod(mload(add(transcript, 0x2520)), mload(add(transcript, 0x1560)), f_q))mstore(add(transcript, 0x2560), addmod(mload(add(transcript, 0x2500)), mload(add(transcript, 0x2540)), f_q))mstore(add(transcript, 0x2580), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x2560)), f_q))mstore(add(transcript, 0x25a0), mulmod(mload(add(transcript, 0x9e0)), mload(add(transcript, 0x9e0)), f_q))mstore(add(transcript, 0x25c0), addmod(mload(add(transcript, 0x25a0)), sub(f_q, mload(add(transcript, 0x9e0))), f_q))mstore(add(transcript, 0x25e0), mulmod(mload(add(transcript, 0x25c0)), mload(add(transcript, 0x1400)), f_q))mstore(add(transcript, 0x2600), addmod(mload(add(transcript, 0x2580)), mload(add(transcript, 0x25e0)), f_q))mstore(add(transcript, 0x2620), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x2600)), f_q))mstore(add(transcript, 0x2640), addmod(mload(add(transcript, 0x9e0)), sub(f_q, mload(add(transcript, 0x9c0))), f_q))mstore(add(transcript, 0x2660), mulmod(mload(add(transcript, 0x2640)), mload(add(transcript, 0x1560)), f_q))mstore(add(transcript, 0x2680), addmod(mload(add(transcript, 0x2620)), mload(add(transcript, 0x2660)), f_q))mstore(add(transcript, 0x26a0), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x2680)), f_q))mstore(add(transcript, 0x26c0), addmod(1, sub(f_q, mload(add(transcript, 0x1400))), f_q))mstore(add(transcript, 0x26e0), addmod(mload(add(transcript, 0x1420)), mload(add(transcript, 0x1440)), f_q))mstore(add(transcript, 0x2700), addmod(mload(add(transcript, 0x26e0)), mload(add(transcript, 0x1460)), f_q))mstore(add(transcript, 0x2720), addmod(mload(add(transcript, 0x2700)), mload(add(transcript, 0x1480)), f_q))mstore(add(transcript, 0x2740), addmod(mload(add(transcript, 0x2720)), mload(add(transcript, 0x14a0)), f_q))mstore(add(transcript, 0x2760), addmod(mload(add(transcript, 0x2740)), mload(add(transcript, 0x14c0)), f_q))mstore(add(transcript, 0x2780), addmod(mload(add(transcript, 0x2760)), mload(add(transcript, 0x14e0)), f_q))mstore(add(transcript, 0x27a0), addmod(mload(add(transcript, 0x2780)), mload(add(transcript, 0x1500)), f_q))mstore(add(transcript, 0x27c0), addmod(mload(add(transcript, 0x27a0)), mload(add(transcript, 0x1520)), f_q))mstore(add(transcript, 0x27e0), addmod(mload(add(transcript, 0x27c0)), mload(add(transcript, 0x1540)), f_q))mstore(add(transcript, 0x2800), addmod(mload(add(transcript, 0x26c0)), sub(f_q, mload(add(transcript, 0x27e0))), f_q))mstore(add(transcript, 0x2820), mulmod(mload(add(transcript, 0x8c0)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x2840), addmod(mload(add(transcript, 0x7a0)), mload(add(transcript, 0x2820)), f_q))mstore(add(transcript, 0x2860), addmod(mload(add(transcript, 0x2840)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x2880), mulmod(mload(add(transcript, 0x8e0)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x28a0), addmod(mload(add(transcript, 0x5e0)), mload(add(transcript, 0x2880)), f_q))mstore(add(transcript, 0x28c0), addmod(mload(add(transcript, 0x28a0)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x28e0), mulmod(mload(add(transcript, 0x28c0)), mload(add(transcript, 0x2860)), f_q))mstore(add(transcript, 0x2900), mulmod(mload(add(transcript, 0x900)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x2920), addmod(mload(add(transcript, 0x600)), mload(add(transcript, 0x2900)), f_q))mstore(add(transcript, 0x2940), addmod(mload(add(transcript, 0x2920)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x2960), mulmod(mload(add(transcript, 0x2940)), mload(add(transcript, 0x28e0)), f_q))mstore(add(transcript, 0x2980), mulmod(mload(add(transcript, 0x920)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x29a0), addmod(mload(add(transcript, 0x7c0)), mload(add(transcript, 0x2980)), f_q))mstore(add(transcript, 0x29c0), addmod(mload(add(transcript, 0x29a0)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x29e0), mulmod(mload(add(transcript, 0x29c0)), mload(add(transcript, 0x2960)), f_q))mstore(add(transcript, 0x2a00), mulmod(mload(add(transcript, 0x29e0)), mload(add(transcript, 0x9a0)), f_q))mstore(add(transcript, 0x2a20), mulmod(1, mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x2a40), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2a20)), f_q))mstore(add(transcript, 0x2a60), addmod(mload(add(transcript, 0x7a0)), mload(add(transcript, 0x2a40)), f_q))mstore(add(transcript, 0x2a80), addmod(mload(add(transcript, 0x2a60)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x2aa0), mulmod(4131629893567559867359510883348571134090853742863529169391034518566172092834, mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x2ac0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2aa0)), f_q))mstore(add(transcript, 0x2ae0), addmod(mload(add(transcript, 0x5e0)), mload(add(transcript, 0x2ac0)), f_q))mstore(add(transcript, 0x2b00), addmod(mload(add(transcript, 0x2ae0)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x2b20), mulmod(mload(add(transcript, 0x2b00)), mload(add(transcript, 0x2a80)), f_q))mstore(add(transcript, 0x2b40), mulmod(8910878055287538404433155982483128285667088683464058436815641868457422632747, mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x2b60), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2b40)), f_q))mstore(add(transcript, 0x2b80), addmod(mload(add(transcript, 0x600)), mload(add(transcript, 0x2b60)), f_q))mstore(add(transcript, 0x2ba0), addmod(mload(add(transcript, 0x2b80)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x2bc0), mulmod(mload(add(transcript, 0x2ba0)), mload(add(transcript, 0x2b20)), f_q))mstore(add(transcript, 0x2be0), mulmod(11166246659983828508719468090013646171463329086121580628794302409516816350802, mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x2c00), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2be0)), f_q))mstore(add(transcript, 0x2c20), addmod(mload(add(transcript, 0x7c0)), mload(add(transcript, 0x2c00)), f_q))mstore(add(transcript, 0x2c40), addmod(mload(add(transcript, 0x2c20)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x2c60), mulmod(mload(add(transcript, 0x2c40)), mload(add(transcript, 0x2bc0)), f_q))mstore(add(transcript, 0x2c80), mulmod(mload(add(transcript, 0x2c60)), mload(add(transcript, 0x980)), f_q))mstore(add(transcript, 0x2ca0), addmod(mload(add(transcript, 0x2a00)), sub(f_q, mload(add(transcript, 0x2c80))), f_q))mstore(add(transcript, 0x2cc0), mulmod(mload(add(transcript, 0x2ca0)), mload(add(transcript, 0x2800)), f_q))mstore(add(transcript, 0x2ce0), addmod(mload(add(transcript, 0x26a0)), mload(add(transcript, 0x2cc0)), f_q))mstore(add(transcript, 0x2d00), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x2ce0)), f_q))mstore(add(transcript, 0x2d20), mulmod(mload(add(transcript, 0x940)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x2d40), addmod(mload(add(transcript, 0x660)), mload(add(transcript, 0x2d20)), f_q))mstore(add(transcript, 0x2d60), addmod(mload(add(transcript, 0x2d40)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x2d80), mulmod(mload(add(transcript, 0x960)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x2da0), addmod(mload(add(transcript, 0x15c0)), mload(add(transcript, 0x2d80)), f_q))mstore(add(transcript, 0x2dc0), addmod(mload(add(transcript, 0x2da0)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x2de0), mulmod(mload(add(transcript, 0x2dc0)), mload(add(transcript, 0x2d60)), f_q))mstore(add(transcript, 0x2e00), mulmod(mload(add(transcript, 0x2de0)), mload(add(transcript, 0xa00)), f_q))mstore(add(transcript, 0x2e20), mulmod(284840088355319032285349970403338060113257071685626700086398481893096618818, mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x2e40), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2e20)), f_q))mstore(add(transcript, 0x2e60), addmod(mload(add(transcript, 0x660)), mload(add(transcript, 0x2e40)), f_q))mstore(add(transcript, 0x2e80), addmod(mload(add(transcript, 0x2e60)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x2ea0), mulmod(21134065618345176623193549882539580312263652408302468683943992798037078993309, mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x2ec0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2ea0)), f_q))mstore(add(transcript, 0x2ee0), addmod(mload(add(transcript, 0x15c0)), mload(add(transcript, 0x2ec0)), f_q))mstore(add(transcript, 0x2f00), addmod(mload(add(transcript, 0x2ee0)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x2f20), mulmod(mload(add(transcript, 0x2f00)), mload(add(transcript, 0x2e80)), f_q))mstore(add(transcript, 0x2f40), mulmod(mload(add(transcript, 0x2f20)), mload(add(transcript, 0x9e0)), f_q))mstore(add(transcript, 0x2f60), addmod(mload(add(transcript, 0x2e00)), sub(f_q, mload(add(transcript, 0x2f40))), f_q))mstore(add(transcript, 0x2f80), mulmod(mload(add(transcript, 0x2f60)), mload(add(transcript, 0x2800)), f_q))mstore(add(transcript, 0x2fa0), addmod(mload(add(transcript, 0x2d00)), mload(add(transcript, 0x2f80)), f_q))mstore(add(transcript, 0x2fc0), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x2fa0)), f_q))mstore(add(transcript, 0x2fe0), addmod(1, sub(f_q, mload(add(transcript, 0xa20))), f_q))mstore(add(transcript, 0x3000), mulmod(mload(add(transcript, 0x2fe0)), mload(add(transcript, 0x1560)), f_q))mstore(add(transcript, 0x3020), addmod(mload(add(transcript, 0x2fc0)), mload(add(transcript, 0x3000)), f_q))mstore(add(transcript, 0x3040), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x3020)), f_q))mstore(add(transcript, 0x3060), mulmod(mload(add(transcript, 0xa20)), mload(add(transcript, 0xa20)), f_q))mstore(add(transcript, 0x3080), addmod(mload(add(transcript, 0x3060)), sub(f_q, mload(add(transcript, 0xa20))), f_q))mstore(add(transcript, 0x30a0), mulmod(mload(add(transcript, 0x3080)), mload(add(transcript, 0x1400)), f_q))mstore(add(transcript, 0x30c0), addmod(mload(add(transcript, 0x3040)), mload(add(transcript, 0x30a0)), f_q))mstore(add(transcript, 0x30e0), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x30c0)), f_q))mstore(add(transcript, 0x3100), addmod(mload(add(transcript, 0xa60)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x3120), mulmod(mload(add(transcript, 0x3100)), mload(add(transcript, 0xa40)), f_q))mstore(add(transcript, 0x3140), addmod(mload(add(transcript, 0xaa0)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x3160), mulmod(mload(add(transcript, 0x3140)), mload(add(transcript, 0x3120)), f_q))mstore(add(transcript, 0x3180), mulmod(mload(add(transcript, 0x660)), mload(add(transcript, 0x820)), f_q))mstore(add(transcript, 0x31a0), addmod(mload(add(transcript, 0x3180)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x31c0), mulmod(mload(add(transcript, 0x31a0)), mload(add(transcript, 0xa20)), f_q))mstore(add(transcript, 0x31e0), addmod(mload(add(transcript, 0x7e0)), mload(add(transcript, 0x2a0)), f_q))mstore(add(transcript, 0x3200), mulmod(mload(add(transcript, 0x31e0)), mload(add(transcript, 0x31c0)), f_q))mstore(add(transcript, 0x3220), addmod(mload(add(transcript, 0x3160)), sub(f_q, mload(add(transcript, 0x3200))), f_q))mstore(add(transcript, 0x3240), mulmod(mload(add(transcript, 0x3220)), mload(add(transcript, 0x2800)), f_q))mstore(add(transcript, 0x3260), addmod(mload(add(transcript, 0x30e0)), mload(add(transcript, 0x3240)), f_q))mstore(add(transcript, 0x3280), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x3260)), f_q))mstore(add(transcript, 0x32a0), addmod(mload(add(transcript, 0xa60)), sub(f_q, mload(add(transcript, 0xaa0))), f_q))mstore(add(transcript, 0x32c0), mulmod(mload(add(transcript, 0x32a0)), mload(add(transcript, 0x1560)), f_q))mstore(add(transcript, 0x32e0), addmod(mload(add(transcript, 0x3280)), mload(add(transcript, 0x32c0)), f_q))mstore(add(transcript, 0x3300), mulmod(mload(add(transcript, 0x400)), mload(add(transcript, 0x32e0)), f_q))mstore(add(transcript, 0x3320), mulmod(mload(add(transcript, 0x32a0)), mload(add(transcript, 0x2800)), f_q))mstore(add(transcript, 0x3340), addmod(mload(add(transcript, 0xa60)), sub(f_q, mload(add(transcript, 0xa80))), f_q))mstore(add(transcript, 0x3360), mulmod(mload(add(transcript, 0x3340)), mload(add(transcript, 0x3320)), f_q))mstore(add(transcript, 0x3380), addmod(mload(add(transcript, 0x3300)), mload(add(transcript, 0x3360)), f_q))mstore(add(transcript, 0x33a0), mulmod(mload(add(transcript, 0xd80)), mload(add(transcript, 0xd80)), f_q))mstore(add(transcript, 0x33c0), mulmod(mload(add(transcript, 0x33a0)), mload(add(transcript, 0xd80)), f_q))mstore(add(transcript, 0x33e0), mulmod(mload(add(transcript, 0x33c0)), mload(add(transcript, 0xd80)), f_q))mstore(add(transcript, 0x3400), mulmod(mload(add(transcript, 0x33e0)), mload(add(transcript, 0xd80)), f_q))mstore(add(transcript, 0x3420), mulmod(1, mload(add(transcript, 0xd80)), f_q))mstore(add(transcript, 0x3440), mulmod(1, mload(add(transcript, 0x33a0)), f_q))mstore(add(transcript, 0x3460), mulmod(1, mload(add(transcript, 0x33c0)), f_q))mstore(add(transcript, 0x3480), mulmod(1, mload(add(transcript, 0x33e0)), f_q))mstore(add(transcript, 0x34a0), mulmod(mload(add(transcript, 0x3380)), mload(add(transcript, 0xda0)), f_q))mstore(add(transcript, 0x34c0), mulmod(mload(add(transcript, 0xc60)), mload(add(transcript, 0x5a0)), f_q))mstore(add(transcript, 0x34e0), mulmod(mload(add(transcript, 0x34c0)), mload(add(transcript, 0x5a0)), f_q))mstore(add(transcript, 0x3500), mulmod(mload(add(transcript, 0x34e0)), mload(add(transcript, 0x5a0)), f_q))mstore(add(transcript, 0x3520), mulmod(mload(add(transcript, 0x3500)), mload(add(transcript, 0x5a0)), f_q))mstore(add(transcript, 0x3540), mulmod(mload(add(transcript, 0x3520)), mload(add(transcript, 0x5a0)), f_q))mstore(add(transcript, 0x3560), mulmod(mload(add(transcript, 0x3540)), mload(add(transcript, 0x5a0)), f_q))mstore(add(transcript, 0x3580), mulmod(mload(add(transcript, 0x5a0)), 1, f_q))mstore(add(transcript, 0x35a0), addmod(mload(add(transcript, 0xbe0)), sub(f_q, mload(add(transcript, 0x3580))), f_q))mstore(add(transcript, 0x35c0), mulmod(mload(add(transcript, 0x5a0)), 4925592601992654644734291590386747644864797672605745962807370354577123815907, f_q))mstore(add(transcript, 0x35e0), addmod(mload(add(transcript, 0xbe0)), sub(f_q, mload(add(transcript, 0x35c0))), f_q))mstore(add(transcript, 0x3600), mulmod(mload(add(transcript, 0x5a0)), 6252951856119339508807713076978770803512896272623217303779254502899773638908, f_q))mstore(add(transcript, 0x3620), addmod(mload(add(transcript, 0xbe0)), sub(f_q, mload(add(transcript, 0x3600))), f_q))mstore(add(transcript, 0x3640), mulmod(mload(add(transcript, 0x5a0)), 7274544076708594923658723438209548371461798187263202684844743708658536398896, f_q))mstore(add(transcript, 0x3660), addmod(mload(add(transcript, 0xbe0)), sub(f_q, mload(add(transcript, 0x3640))), f_q))mstore(add(transcript, 0x3680), mulmod(mload(add(transcript, 0x5a0)), 7393649265675507591155086225434297871937368251641985215568891852805958167681, f_q))mstore(add(transcript, 0x36a0), addmod(mload(add(transcript, 0xbe0)), sub(f_q, mload(add(transcript, 0x3680))), f_q))mstore(add(transcript, 0x36c0), mulmod(mload(add(transcript, 0x5a0)), 7879121193889476823080337615619606064513031487201236524339933482498493538909, f_q))mstore(add(transcript, 0x36e0), addmod(mload(add(transcript, 0xbe0)), sub(f_q, mload(add(transcript, 0x36c0))), f_q))mstore(add(transcript, 0x3700), mulmod(mload(add(transcript, 0x5a0)), 15081878567694948879561789447741660476476784016517053594900277690072924122008, f_q))mstore(add(transcript, 0x3720), addmod(mload(add(transcript, 0xbe0)), sub(f_q, mload(add(transcript, 0x3700))), f_q))mstore(add(transcript, 0x3740), mulmod(mload(add(transcript, 0x5a0)), 15554008185779528788857340196607833777388478343360168149406749724843247080062, f_q))mstore(add(transcript, 0x3760), addmod(mload(add(transcript, 0xbe0)), sub(f_q, mload(add(transcript, 0x3740))), f_q))mstore(add(transcript, 0x3780), mulmod(mload(add(transcript, 0x5a0)), 19380560087801265747114831706136320509424814679569278834391540198888293317501, f_q))mstore(add(transcript, 0x37a0), addmod(mload(add(transcript, 0xbe0)), sub(f_q, mload(add(transcript, 0x3780))), f_q))mstore(add(transcript, 0x37c0), mulmod(mload(add(transcript, 0x5a0)), 21487619741887049518823228776094213266513706733682665306796560993386997753783, f_q))mstore(add(transcript, 0x37e0), addmod(mload(add(transcript, 0xbe0)), sub(f_q, mload(add(transcript, 0x37c0))), f_q)){            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0xc60)), 19470333053884630052643688193991482022807116448657043890197497819686199857828, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0xc60)), 2417909817954645169602717551265793065741247951758990453500706366889608637789, f_q), f_q), result, f_q)mstore(add(transcript, 0x3800), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0xc60)), 13686227242150003628673578706486473027501243666075718775893288845164412632930, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0xc60)), 10079503758141076467065204586507257535549232608832327988764044976944819876346, f_q), f_q), result, f_q)mstore(add(transcript, 0x3820), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0xc60)), 18715936898160381416714524359517348601997944075114713669820885373469568354766, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0xc60)), 15375775075249615866494035504844970190233299190010037655541891534730124992278, f_q), f_q), result, f_q)mstore(add(transcript, 0x3840), result)        }mstore(add(transcript, 0x3860), mulmod(1, mload(add(transcript, 0x35a0)), f_q))mstore(add(transcript, 0x3880), mulmod(mload(add(transcript, 0x3860)), mload(add(transcript, 0x37a0)), f_q))mstore(add(transcript, 0x38a0), mulmod(mload(add(transcript, 0x3880)), mload(add(transcript, 0x35e0)), f_q)){            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x3540)), 18860104522937977798249050214083378256562464697859349299056922387355516034063, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x3540)), 3028138348901297423997355531173896831985899702556685044641281799220292461554, f_q), f_q), result, f_q)mstore(add(transcript, 0x38c0), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x3540)), 10983769177415013546986885573296737186107909090768195736468450955101063325040, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x3540)), 14458734060445995233182952687137571496949454853242727147728500913126529221212, f_q), f_q), result, f_q)mstore(add(transcript, 0x38e0), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x3540)), 9189230766325942965449189822508348205324553291015864943526656792660439153530, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x3540)), 12360112382402985901396007014126943262996567889073389863028570035995821079267, f_q), f_q), result, f_q)mstore(add(transcript, 0x3900), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x3540)), 10559875869342805439713399878591155822047682781376981176159856433115570104311, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x3540)), 21018666805137048394010695665842777888592483457802467877856330192635323844229, f_q), f_q), result, f_q)mstore(add(transcript, 0x3920), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x3540)), 21018666805137048394010695665842777888592483457802467877856330192635323844229, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x3540)), 5292827510548457087231383171690341152669059729679877580775290382921075550981, f_q), f_q), result, f_q)mstore(add(transcript, 0x3940), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x3540)), 20712332908555123635347783851613657629876619333913865638888094692361041878550, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x3540)), 20290763032462573504612549377322518502190059141537161029691382707905795061829, f_q), f_q), result, f_q)mstore(add(transcript, 0x3960), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x3540)), 17150151341788416023861960926489045768936519502969807593067393919636757531861, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x3540)), 11078078465992319356988627518591608841413557318055734277450705049478973216707, f_q), f_q), result, f_q)mstore(add(transcript, 0x3980), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x3540)), 20217133534108898405122877261442048575679188790972639962687475312338721224362, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x3540)), 225204590105975339756254911493790663387441948919440751529403923246348446521, f_q), f_q), result, f_q)mstore(add(transcript, 0x39a0), result)        }mstore(add(transcript, 0x39c0), mulmod(mload(add(transcript, 0x3880)), mload(add(transcript, 0x3620)), f_q))mstore(add(transcript, 0x39e0), mulmod(mload(add(transcript, 0x39c0)), mload(add(transcript, 0x3760)), f_q))mstore(add(transcript, 0x3a00), mulmod(mload(add(transcript, 0x39e0)), mload(add(transcript, 0x36a0)), f_q))mstore(add(transcript, 0x3a20), mulmod(mload(add(transcript, 0x3a00)), mload(add(transcript, 0x3720)), f_q))mstore(add(transcript, 0x3a40), mulmod(mload(add(transcript, 0x3a20)), mload(add(transcript, 0x3660)), f_q))mstore(add(transcript, 0x3a60), mulmod(mload(add(transcript, 0x3a40)), mload(add(transcript, 0x36e0)), f_q)){            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0xc60)), 21567215119705729163882118011270705647515482185639249995032557784048169441417, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0xc60)), 321027752133546058364287733986569441032882214776784348665646402527639054200, f_q), f_q), result, f_q)mstore(add(transcript, 0x3a80), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0xc60)), 11589345176328904517435148889207249402792877929093512671058228880802443049341, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0xc60)), 21866390551121270086107654598370493817556885843375240797156773604761800368303, f_q), f_q), result, f_q)mstore(add(transcript, 0x3aa0), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0xc60)), 7625736481972756374067102301166945015751711349575140569295620754833532002813, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0xc60)), 5996830830601050301229412844813288576957838310017429185783285854602904092422, f_q), f_q), result, f_q)mstore(add(transcript, 0x3ac0), result)        }mstore(add(transcript, 0x3ae0), mulmod(mload(add(transcript, 0x3880)), mload(add(transcript, 0x37e0)), f_q)){            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x5a0)), 2507682784038009475131574039120954579123549720846755509306663987687515178117, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x5a0)), 19380560087801265747114831706136320509424814679569278834391540198888293317500, f_q), f_q), result, f_q)mstore(add(transcript, 0x3b00), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x5a0)), 19380560087801265747114831706136320509424814679569278834391540198888293317500, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x5a0)), 13127608231681926238307118629157549705911918406946061530612285695988519678593, f_q), f_q), result, f_q)mstore(add(transcript, 0x3b20), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x5a0)), 16962650269846620577512114154870527443683566727810288380890833831998684679711, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x5a0)), 4925592601992654644734291590386747644864797672605745962807370354577123815906, f_q), f_q), result, f_q)mstore(add(transcript, 0x3b40), result)        }{            let result := mulmod(mload(add(transcript, 0xbe0)), mulmod(mload(add(transcript, 0x5a0)), 4925592601992654644734291590386747644864797672605745962807370354577123815906, f_q), f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), mulmod(mload(add(transcript, 0x5a0)), 664623189640884330400307346618971907426870604454565164570654825418724962734, f_q), f_q), result, f_q)mstore(add(transcript, 0x3b60), result)        }mstore(add(transcript, 0x3b80), mulmod(mload(add(transcript, 0x3860)), mload(add(transcript, 0x35e0)), f_q)){            let result := mulmod(mload(add(transcript, 0xbe0)), 1, f_q)result := addmod(mulmod(mload(add(transcript, 0x5a0)), 21888242871839275222246405745257275088548364400416034343698204186575808495616, f_q), result, f_q)mstore(add(transcript, 0x3ba0), result)        }{            let prod := mload(add(transcript, 0x3800))                prod := mulmod(mload(add(transcript, 0x3820)), prod, f_q)                mstore(add(transcript, 0x3bc0), prod)                            prod := mulmod(mload(add(transcript, 0x3840)), prod, f_q)                mstore(add(transcript, 0x3be0), prod)                            prod := mulmod(mload(add(transcript, 0x38c0)), prod, f_q)                mstore(add(transcript, 0x3c00), prod)                            prod := mulmod(mload(add(transcript, 0x38e0)), prod, f_q)                mstore(add(transcript, 0x3c20), prod)                            prod := mulmod(mload(add(transcript, 0x3900)), prod, f_q)                mstore(add(transcript, 0x3c40), prod)                            prod := mulmod(mload(add(transcript, 0x3920)), prod, f_q)                mstore(add(transcript, 0x3c60), prod)                            prod := mulmod(mload(add(transcript, 0x3940)), prod, f_q)                mstore(add(transcript, 0x3c80), prod)                            prod := mulmod(mload(add(transcript, 0x3960)), prod, f_q)                mstore(add(transcript, 0x3ca0), prod)                            prod := mulmod(mload(add(transcript, 0x3980)), prod, f_q)                mstore(add(transcript, 0x3cc0), prod)                            prod := mulmod(mload(add(transcript, 0x39a0)), prod, f_q)                mstore(add(transcript, 0x3ce0), prod)                            prod := mulmod(mload(add(transcript, 0x3a60)), prod, f_q)                mstore(add(transcript, 0x3d00), prod)                            prod := mulmod(mload(add(transcript, 0x3a80)), prod, f_q)                mstore(add(transcript, 0x3d20), prod)                            prod := mulmod(mload(add(transcript, 0x3aa0)), prod, f_q)                mstore(add(transcript, 0x3d40), prod)                            prod := mulmod(mload(add(transcript, 0x3ac0)), prod, f_q)                mstore(add(transcript, 0x3d60), prod)                            prod := mulmod(mload(add(transcript, 0x3ae0)), prod, f_q)                mstore(add(transcript, 0x3d80), prod)                            prod := mulmod(mload(add(transcript, 0x3b00)), prod, f_q)                mstore(add(transcript, 0x3da0), prod)                            prod := mulmod(mload(add(transcript, 0x3b20)), prod, f_q)                mstore(add(transcript, 0x3dc0), prod)                            prod := mulmod(mload(add(transcript, 0x3880)), prod, f_q)                mstore(add(transcript, 0x3de0), prod)                            prod := mulmod(mload(add(transcript, 0x3b40)), prod, f_q)                mstore(add(transcript, 0x3e00), prod)                            prod := mulmod(mload(add(transcript, 0x3b60)), prod, f_q)                mstore(add(transcript, 0x3e20), prod)                            prod := mulmod(mload(add(transcript, 0x3b80)), prod, f_q)                mstore(add(transcript, 0x3e40), prod)                            prod := mulmod(mload(add(transcript, 0x3ba0)), prod, f_q)                mstore(add(transcript, 0x3e60), prod)                            prod := mulmod(mload(add(transcript, 0x3860)), prod, f_q)                mstore(add(transcript, 0x3e80), prod)                    }mstore(add(transcript, 0x3ec0), 32)mstore(add(transcript, 0x3ee0), 32)mstore(add(transcript, 0x3f00), 32)mstore(add(transcript, 0x3f20), mload(add(transcript, 0x3e80)))mstore(add(transcript, 0x3f40), 21888242871839275222246405745257275088548364400416034343698204186575808495615)mstore(add(transcript, 0x3f60), 21888242871839275222246405745257275088548364400416034343698204186575808495617)success := and(eq(staticcall(gas(), 0x5, add(transcript, 0x3ec0), 0xc0, add(transcript, 0x3ea0), 0x20), 1), success){                        let inv := mload(add(transcript, 0x3ea0))            let v                            v := mload(add(transcript, 0x3860))                    mstore(add(transcript, 0x3860), mulmod(mload(add(transcript, 0x3e60)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3ba0))                    mstore(add(transcript, 0x3ba0), mulmod(mload(add(transcript, 0x3e40)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3b80))                    mstore(add(transcript, 0x3b80), mulmod(mload(add(transcript, 0x3e20)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3b60))                    mstore(add(transcript, 0x3b60), mulmod(mload(add(transcript, 0x3e00)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3b40))                    mstore(add(transcript, 0x3b40), mulmod(mload(add(transcript, 0x3de0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3880))                    mstore(add(transcript, 0x3880), mulmod(mload(add(transcript, 0x3dc0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3b20))                    mstore(add(transcript, 0x3b20), mulmod(mload(add(transcript, 0x3da0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3b00))                    mstore(add(transcript, 0x3b00), mulmod(mload(add(transcript, 0x3d80)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3ae0))                    mstore(add(transcript, 0x3ae0), mulmod(mload(add(transcript, 0x3d60)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3ac0))                    mstore(add(transcript, 0x3ac0), mulmod(mload(add(transcript, 0x3d40)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3aa0))                    mstore(add(transcript, 0x3aa0), mulmod(mload(add(transcript, 0x3d20)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3a80))                    mstore(add(transcript, 0x3a80), mulmod(mload(add(transcript, 0x3d00)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3a60))                    mstore(add(transcript, 0x3a60), mulmod(mload(add(transcript, 0x3ce0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x39a0))                    mstore(add(transcript, 0x39a0), mulmod(mload(add(transcript, 0x3cc0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3980))                    mstore(add(transcript, 0x3980), mulmod(mload(add(transcript, 0x3ca0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3960))                    mstore(add(transcript, 0x3960), mulmod(mload(add(transcript, 0x3c80)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3940))                    mstore(add(transcript, 0x3940), mulmod(mload(add(transcript, 0x3c60)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3920))                    mstore(add(transcript, 0x3920), mulmod(mload(add(transcript, 0x3c40)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3900))                    mstore(add(transcript, 0x3900), mulmod(mload(add(transcript, 0x3c20)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x38e0))                    mstore(add(transcript, 0x38e0), mulmod(mload(add(transcript, 0x3c00)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x38c0))                    mstore(add(transcript, 0x38c0), mulmod(mload(add(transcript, 0x3be0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3840))                    mstore(add(transcript, 0x3840), mulmod(mload(add(transcript, 0x3bc0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3820))                    mstore(add(transcript, 0x3820), mulmod(mload(add(transcript, 0x3800)), inv, f_q))                    inv := mulmod(v, inv, f_q)                mstore(add(transcript, 0x3800), inv)        }{            let result := mload(add(transcript, 0x3800))result := addmod(mload(add(transcript, 0x3820)), result, f_q)result := addmod(mload(add(transcript, 0x3840)), result, f_q)mstore(add(transcript, 0x3f80), result)        }mstore(add(transcript, 0x3fa0), mulmod(mload(add(transcript, 0x38a0)), mload(add(transcript, 0x3a60)), f_q)){            let result := mload(add(transcript, 0x38c0))result := addmod(mload(add(transcript, 0x38e0)), result, f_q)result := addmod(mload(add(transcript, 0x3900)), result, f_q)result := addmod(mload(add(transcript, 0x3920)), result, f_q)result := addmod(mload(add(transcript, 0x3940)), result, f_q)result := addmod(mload(add(transcript, 0x3960)), result, f_q)result := addmod(mload(add(transcript, 0x3980)), result, f_q)result := addmod(mload(add(transcript, 0x39a0)), result, f_q)mstore(add(transcript, 0x3fc0), result)        }mstore(add(transcript, 0x3fe0), mulmod(mload(add(transcript, 0x38a0)), mload(add(transcript, 0x3ae0)), f_q)){            let result := mload(add(transcript, 0x3a80))result := addmod(mload(add(transcript, 0x3aa0)), result, f_q)result := addmod(mload(add(transcript, 0x3ac0)), result, f_q)mstore(add(transcript, 0x4000), result)        }mstore(add(transcript, 0x4020), mulmod(mload(add(transcript, 0x38a0)), mload(add(transcript, 0x3880)), f_q)){            let result := mload(add(transcript, 0x3b00))result := addmod(mload(add(transcript, 0x3b20)), result, f_q)mstore(add(transcript, 0x4040), result)        }mstore(add(transcript, 0x4060), mulmod(mload(add(transcript, 0x38a0)), mload(add(transcript, 0x3b80)), f_q)){            let result := mload(add(transcript, 0x3b40))result := addmod(mload(add(transcript, 0x3b60)), result, f_q)mstore(add(transcript, 0x4080), result)        }mstore(add(transcript, 0x40a0), mulmod(mload(add(transcript, 0x38a0)), mload(add(transcript, 0x3860)), f_q)){            let result := mload(add(transcript, 0x3ba0))mstore(add(transcript, 0x40c0), result)        }{            let prod := mload(add(transcript, 0x3f80))                prod := mulmod(mload(add(transcript, 0x3fc0)), prod, f_q)                mstore(add(transcript, 0x40e0), prod)                            prod := mulmod(mload(add(transcript, 0x4000)), prod, f_q)                mstore(add(transcript, 0x4100), prod)                            prod := mulmod(mload(add(transcript, 0x4040)), prod, f_q)                mstore(add(transcript, 0x4120), prod)                            prod := mulmod(mload(add(transcript, 0x4080)), prod, f_q)                mstore(add(transcript, 0x4140), prod)                            prod := mulmod(mload(add(transcript, 0x40c0)), prod, f_q)                mstore(add(transcript, 0x4160), prod)                    }mstore(add(transcript, 0x41a0), 32)mstore(add(transcript, 0x41c0), 32)mstore(add(transcript, 0x41e0), 32)mstore(add(transcript, 0x4200), mload(add(transcript, 0x4160)))mstore(add(transcript, 0x4220), 21888242871839275222246405745257275088548364400416034343698204186575808495615)mstore(add(transcript, 0x4240), 21888242871839275222246405745257275088548364400416034343698204186575808495617)success := and(eq(staticcall(gas(), 0x5, add(transcript, 0x41a0), 0xc0, add(transcript, 0x4180), 0x20), 1), success){                        let inv := mload(add(transcript, 0x4180))            let v                            v := mload(add(transcript, 0x40c0))                    mstore(add(transcript, 0x40c0), mulmod(mload(add(transcript, 0x4140)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x4080))                    mstore(add(transcript, 0x4080), mulmod(mload(add(transcript, 0x4120)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x4040))                    mstore(add(transcript, 0x4040), mulmod(mload(add(transcript, 0x4100)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x4000))                    mstore(add(transcript, 0x4000), mulmod(mload(add(transcript, 0x40e0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x3fc0))                    mstore(add(transcript, 0x3fc0), mulmod(mload(add(transcript, 0x3f80)), inv, f_q))                    inv := mulmod(v, inv, f_q)                mstore(add(transcript, 0x3f80), inv)        }mstore(add(transcript, 0x4260), mulmod(mload(add(transcript, 0x3fa0)), mload(add(transcript, 0x3fc0)), f_q))mstore(add(transcript, 0x4280), mulmod(mload(add(transcript, 0x3fe0)), mload(add(transcript, 0x4000)), f_q))mstore(add(transcript, 0x42a0), mulmod(mload(add(transcript, 0x4020)), mload(add(transcript, 0x4040)), f_q))mstore(add(transcript, 0x42c0), mulmod(mload(add(transcript, 0x4060)), mload(add(transcript, 0x4080)), f_q))mstore(add(transcript, 0x42e0), mulmod(mload(add(transcript, 0x40a0)), mload(add(transcript, 0x40c0)), f_q))mstore(add(transcript, 0x4300), mulmod(mload(add(transcript, 0xae0)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4320), mulmod(mload(add(transcript, 0x4300)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4340), mulmod(mload(add(transcript, 0x4320)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4360), mulmod(mload(add(transcript, 0x4340)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4380), mulmod(mload(add(transcript, 0x4360)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x43a0), mulmod(mload(add(transcript, 0x4380)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x43c0), mulmod(mload(add(transcript, 0x43a0)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x43e0), mulmod(mload(add(transcript, 0x43c0)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4400), mulmod(mload(add(transcript, 0x43e0)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4420), mulmod(mload(add(transcript, 0x4400)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4440), mulmod(mload(add(transcript, 0x4420)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4460), mulmod(mload(add(transcript, 0x4440)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4480), mulmod(mload(add(transcript, 0x4460)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x44a0), mulmod(mload(add(transcript, 0x4480)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x44c0), mulmod(mload(add(transcript, 0x44a0)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x44e0), mulmod(mload(add(transcript, 0x44c0)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4500), mulmod(mload(add(transcript, 0xb40)), mload(add(transcript, 0xb40)), f_q))mstore(add(transcript, 0x4520), mulmod(mload(add(transcript, 0x4500)), mload(add(transcript, 0xb40)), f_q))mstore(add(transcript, 0x4540), mulmod(mload(add(transcript, 0x4520)), mload(add(transcript, 0xb40)), f_q))mstore(add(transcript, 0x4560), mulmod(mload(add(transcript, 0x4540)), mload(add(transcript, 0xb40)), f_q))mstore(add(transcript, 0x4580), mulmod(mload(add(transcript, 0x4560)), mload(add(transcript, 0xb40)), f_q)){            let result := mulmod(mload(add(transcript, 0x5e0)), mload(add(transcript, 0x3800)), f_q)result := addmod(mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x3820)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x6a0)), mload(add(transcript, 0x3840)), f_q), result, f_q)mstore(add(transcript, 0x45a0), result)        }mstore(add(transcript, 0x45c0), mulmod(mload(add(transcript, 0x45a0)), mload(add(transcript, 0x3f80)), f_q))mstore(add(transcript, 0x45e0), mulmod(sub(f_q, mload(add(transcript, 0x45c0))), 1, f_q)){            let result := mulmod(mload(add(transcript, 0x600)), mload(add(transcript, 0x3800)), f_q)result := addmod(mulmod(mload(add(transcript, 0x640)), mload(add(transcript, 0x3820)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x680)), mload(add(transcript, 0x3840)), f_q), result, f_q)mstore(add(transcript, 0x4600), result)        }mstore(add(transcript, 0x4620), mulmod(mload(add(transcript, 0x4600)), mload(add(transcript, 0x3f80)), f_q))mstore(add(transcript, 0x4640), mulmod(sub(f_q, mload(add(transcript, 0x4620))), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4660), mulmod(1, mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4680), addmod(mload(add(transcript, 0x45e0)), mload(add(transcript, 0x4640)), f_q))mstore(add(transcript, 0x46a0), mulmod(mload(add(transcript, 0x4680)), 1, f_q))mstore(add(transcript, 0x46c0), mulmod(mload(add(transcript, 0x4660)), 1, f_q))mstore(add(transcript, 0x46e0), mulmod(1, mload(add(transcript, 0x3fa0)), f_q)){            let result := mulmod(mload(add(transcript, 0x660)), mload(add(transcript, 0x38c0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x6c0)), mload(add(transcript, 0x38e0)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x6e0)), mload(add(transcript, 0x3900)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x700)), mload(add(transcript, 0x3920)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x720)), mload(add(transcript, 0x3940)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x740)), mload(add(transcript, 0x3960)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x760)), mload(add(transcript, 0x3980)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x780)), mload(add(transcript, 0x39a0)), f_q), result, f_q)mstore(add(transcript, 0x4700), result)        }mstore(add(transcript, 0x4720), mulmod(mload(add(transcript, 0x4700)), mload(add(transcript, 0x4260)), f_q))mstore(add(transcript, 0x4740), mulmod(sub(f_q, mload(add(transcript, 0x4720))), 1, f_q))mstore(add(transcript, 0x4760), mulmod(mload(add(transcript, 0x46e0)), 1, f_q))mstore(add(transcript, 0x4780), mulmod(mload(add(transcript, 0x4740)), mload(add(transcript, 0xb40)), f_q))mstore(add(transcript, 0x47a0), mulmod(mload(add(transcript, 0x4760)), mload(add(transcript, 0xb40)), f_q))mstore(add(transcript, 0x47c0), addmod(mload(add(transcript, 0x46a0)), mload(add(transcript, 0x4780)), f_q))mstore(add(transcript, 0x47e0), mulmod(1, mload(add(transcript, 0x3fe0)), f_q)){            let result := mulmod(mload(add(transcript, 0x980)), mload(add(transcript, 0x3a80)), f_q)result := addmod(mulmod(mload(add(transcript, 0x9a0)), mload(add(transcript, 0x3aa0)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x9c0)), mload(add(transcript, 0x3ac0)), f_q), result, f_q)mstore(add(transcript, 0x4800), result)        }mstore(add(transcript, 0x4820), mulmod(mload(add(transcript, 0x4800)), mload(add(transcript, 0x4280)), f_q))mstore(add(transcript, 0x4840), mulmod(sub(f_q, mload(add(transcript, 0x4820))), 1, f_q))mstore(add(transcript, 0x4860), mulmod(mload(add(transcript, 0x47e0)), 1, f_q))mstore(add(transcript, 0x4880), mulmod(mload(add(transcript, 0x4840)), mload(add(transcript, 0x4500)), f_q))mstore(add(transcript, 0x48a0), mulmod(mload(add(transcript, 0x4860)), mload(add(transcript, 0x4500)), f_q))mstore(add(transcript, 0x48c0), addmod(mload(add(transcript, 0x47c0)), mload(add(transcript, 0x4880)), f_q))mstore(add(transcript, 0x48e0), mulmod(1, mload(add(transcript, 0x4020)), f_q)){            let result := mulmod(mload(add(transcript, 0x9e0)), mload(add(transcript, 0x3b00)), f_q)result := addmod(mulmod(mload(add(transcript, 0xa00)), mload(add(transcript, 0x3b20)), f_q), result, f_q)mstore(add(transcript, 0x4900), result)        }mstore(add(transcript, 0x4920), mulmod(mload(add(transcript, 0x4900)), mload(add(transcript, 0x42a0)), f_q))mstore(add(transcript, 0x4940), mulmod(sub(f_q, mload(add(transcript, 0x4920))), 1, f_q))mstore(add(transcript, 0x4960), mulmod(mload(add(transcript, 0x48e0)), 1, f_q)){            let result := mulmod(mload(add(transcript, 0xa20)), mload(add(transcript, 0x3b00)), f_q)result := addmod(mulmod(mload(add(transcript, 0xa40)), mload(add(transcript, 0x3b20)), f_q), result, f_q)mstore(add(transcript, 0x4980), result)        }mstore(add(transcript, 0x49a0), mulmod(mload(add(transcript, 0x4980)), mload(add(transcript, 0x42a0)), f_q))mstore(add(transcript, 0x49c0), mulmod(sub(f_q, mload(add(transcript, 0x49a0))), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x49e0), mulmod(mload(add(transcript, 0x48e0)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4a00), addmod(mload(add(transcript, 0x4940)), mload(add(transcript, 0x49c0)), f_q))mstore(add(transcript, 0x4a20), mulmod(mload(add(transcript, 0x4a00)), mload(add(transcript, 0x4520)), f_q))mstore(add(transcript, 0x4a40), mulmod(mload(add(transcript, 0x4960)), mload(add(transcript, 0x4520)), f_q))mstore(add(transcript, 0x4a60), mulmod(mload(add(transcript, 0x49e0)), mload(add(transcript, 0x4520)), f_q))mstore(add(transcript, 0x4a80), addmod(mload(add(transcript, 0x48c0)), mload(add(transcript, 0x4a20)), f_q))mstore(add(transcript, 0x4aa0), mulmod(1, mload(add(transcript, 0x4060)), f_q)){            let result := mulmod(mload(add(transcript, 0xa60)), mload(add(transcript, 0x3b40)), f_q)result := addmod(mulmod(mload(add(transcript, 0xa80)), mload(add(transcript, 0x3b60)), f_q), result, f_q)mstore(add(transcript, 0x4ac0), result)        }mstore(add(transcript, 0x4ae0), mulmod(mload(add(transcript, 0x4ac0)), mload(add(transcript, 0x42c0)), f_q))mstore(add(transcript, 0x4b00), mulmod(sub(f_q, mload(add(transcript, 0x4ae0))), 1, f_q))mstore(add(transcript, 0x4b20), mulmod(mload(add(transcript, 0x4aa0)), 1, f_q))mstore(add(transcript, 0x4b40), mulmod(mload(add(transcript, 0x4b00)), mload(add(transcript, 0x4540)), f_q))mstore(add(transcript, 0x4b60), mulmod(mload(add(transcript, 0x4b20)), mload(add(transcript, 0x4540)), f_q))mstore(add(transcript, 0x4b80), addmod(mload(add(transcript, 0x4a80)), mload(add(transcript, 0x4b40)), f_q))mstore(add(transcript, 0x4ba0), mulmod(1, mload(add(transcript, 0x40a0)), f_q)){            let result := mulmod(mload(add(transcript, 0xaa0)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x4bc0), result)        }mstore(add(transcript, 0x4be0), mulmod(mload(add(transcript, 0x4bc0)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x4c00), mulmod(sub(f_q, mload(add(transcript, 0x4be0))), 1, f_q))mstore(add(transcript, 0x4c20), mulmod(mload(add(transcript, 0x4ba0)), 1, f_q)){            let result := mulmod(mload(add(transcript, 0x7a0)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x4c40), result)        }mstore(add(transcript, 0x4c60), mulmod(mload(add(transcript, 0x4c40)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x4c80), mulmod(sub(f_q, mload(add(transcript, 0x4c60))), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4ca0), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0x4cc0), addmod(mload(add(transcript, 0x4c00)), mload(add(transcript, 0x4c80)), f_q)){            let result := mulmod(mload(add(transcript, 0x7c0)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x4ce0), result)        }mstore(add(transcript, 0x4d00), mulmod(mload(add(transcript, 0x4ce0)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x4d20), mulmod(sub(f_q, mload(add(transcript, 0x4d00))), mload(add(transcript, 0x4300)), f_q))mstore(add(transcript, 0x4d40), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x4300)), f_q))mstore(add(transcript, 0x4d60), addmod(mload(add(transcript, 0x4cc0)), mload(add(transcript, 0x4d20)), f_q)){            let result := mulmod(mload(add(transcript, 0x7e0)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x4d80), result)        }mstore(add(transcript, 0x4da0), mulmod(mload(add(transcript, 0x4d80)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x4dc0), mulmod(sub(f_q, mload(add(transcript, 0x4da0))), mload(add(transcript, 0x4320)), f_q))mstore(add(transcript, 0x4de0), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x4320)), f_q))mstore(add(transcript, 0x4e00), addmod(mload(add(transcript, 0x4d60)), mload(add(transcript, 0x4dc0)), f_q)){            let result := mulmod(mload(add(transcript, 0x800)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x4e20), result)        }mstore(add(transcript, 0x4e40), mulmod(mload(add(transcript, 0x4e20)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x4e60), mulmod(sub(f_q, mload(add(transcript, 0x4e40))), mload(add(transcript, 0x4340)), f_q))mstore(add(transcript, 0x4e80), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x4340)), f_q))mstore(add(transcript, 0x4ea0), addmod(mload(add(transcript, 0x4e00)), mload(add(transcript, 0x4e60)), f_q)){            let result := mulmod(mload(add(transcript, 0x820)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x4ec0), result)        }mstore(add(transcript, 0x4ee0), mulmod(mload(add(transcript, 0x4ec0)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x4f00), mulmod(sub(f_q, mload(add(transcript, 0x4ee0))), mload(add(transcript, 0x4360)), f_q))mstore(add(transcript, 0x4f20), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x4360)), f_q))mstore(add(transcript, 0x4f40), addmod(mload(add(transcript, 0x4ea0)), mload(add(transcript, 0x4f00)), f_q)){            let result := mulmod(mload(add(transcript, 0x840)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x4f60), result)        }mstore(add(transcript, 0x4f80), mulmod(mload(add(transcript, 0x4f60)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x4fa0), mulmod(sub(f_q, mload(add(transcript, 0x4f80))), mload(add(transcript, 0x4380)), f_q))mstore(add(transcript, 0x4fc0), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x4380)), f_q))mstore(add(transcript, 0x4fe0), addmod(mload(add(transcript, 0x4f40)), mload(add(transcript, 0x4fa0)), f_q)){            let result := mulmod(mload(add(transcript, 0x860)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x5000), result)        }mstore(add(transcript, 0x5020), mulmod(mload(add(transcript, 0x5000)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x5040), mulmod(sub(f_q, mload(add(transcript, 0x5020))), mload(add(transcript, 0x43a0)), f_q))mstore(add(transcript, 0x5060), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x43a0)), f_q))mstore(add(transcript, 0x5080), addmod(mload(add(transcript, 0x4fe0)), mload(add(transcript, 0x5040)), f_q)){            let result := mulmod(mload(add(transcript, 0x880)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x50a0), result)        }mstore(add(transcript, 0x50c0), mulmod(mload(add(transcript, 0x50a0)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x50e0), mulmod(sub(f_q, mload(add(transcript, 0x50c0))), mload(add(transcript, 0x43c0)), f_q))mstore(add(transcript, 0x5100), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x43c0)), f_q))mstore(add(transcript, 0x5120), addmod(mload(add(transcript, 0x5080)), mload(add(transcript, 0x50e0)), f_q)){            let result := mulmod(mload(add(transcript, 0x8c0)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x5140), result)        }mstore(add(transcript, 0x5160), mulmod(mload(add(transcript, 0x5140)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x5180), mulmod(sub(f_q, mload(add(transcript, 0x5160))), mload(add(transcript, 0x43e0)), f_q))mstore(add(transcript, 0x51a0), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x43e0)), f_q))mstore(add(transcript, 0x51c0), addmod(mload(add(transcript, 0x5120)), mload(add(transcript, 0x5180)), f_q)){            let result := mulmod(mload(add(transcript, 0x8e0)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x51e0), result)        }mstore(add(transcript, 0x5200), mulmod(mload(add(transcript, 0x51e0)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x5220), mulmod(sub(f_q, mload(add(transcript, 0x5200))), mload(add(transcript, 0x4400)), f_q))mstore(add(transcript, 0x5240), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x4400)), f_q))mstore(add(transcript, 0x5260), addmod(mload(add(transcript, 0x51c0)), mload(add(transcript, 0x5220)), f_q)){            let result := mulmod(mload(add(transcript, 0x900)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x5280), result)        }mstore(add(transcript, 0x52a0), mulmod(mload(add(transcript, 0x5280)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x52c0), mulmod(sub(f_q, mload(add(transcript, 0x52a0))), mload(add(transcript, 0x4420)), f_q))mstore(add(transcript, 0x52e0), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x4420)), f_q))mstore(add(transcript, 0x5300), addmod(mload(add(transcript, 0x5260)), mload(add(transcript, 0x52c0)), f_q)){            let result := mulmod(mload(add(transcript, 0x920)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x5320), result)        }mstore(add(transcript, 0x5340), mulmod(mload(add(transcript, 0x5320)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x5360), mulmod(sub(f_q, mload(add(transcript, 0x5340))), mload(add(transcript, 0x4440)), f_q))mstore(add(transcript, 0x5380), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x4440)), f_q))mstore(add(transcript, 0x53a0), addmod(mload(add(transcript, 0x5300)), mload(add(transcript, 0x5360)), f_q)){            let result := mulmod(mload(add(transcript, 0x940)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x53c0), result)        }mstore(add(transcript, 0x53e0), mulmod(mload(add(transcript, 0x53c0)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x5400), mulmod(sub(f_q, mload(add(transcript, 0x53e0))), mload(add(transcript, 0x4460)), f_q))mstore(add(transcript, 0x5420), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x4460)), f_q))mstore(add(transcript, 0x5440), addmod(mload(add(transcript, 0x53a0)), mload(add(transcript, 0x5400)), f_q)){            let result := mulmod(mload(add(transcript, 0x960)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x5460), result)        }mstore(add(transcript, 0x5480), mulmod(mload(add(transcript, 0x5460)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x54a0), mulmod(sub(f_q, mload(add(transcript, 0x5480))), mload(add(transcript, 0x4480)), f_q))mstore(add(transcript, 0x54c0), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x4480)), f_q))mstore(add(transcript, 0x54e0), addmod(mload(add(transcript, 0x5440)), mload(add(transcript, 0x54a0)), f_q))mstore(add(transcript, 0x5500), mulmod(mload(add(transcript, 0x3420)), mload(add(transcript, 0x40a0)), f_q))mstore(add(transcript, 0x5520), mulmod(mload(add(transcript, 0x3440)), mload(add(transcript, 0x40a0)), f_q))mstore(add(transcript, 0x5540), mulmod(mload(add(transcript, 0x3460)), mload(add(transcript, 0x40a0)), f_q))mstore(add(transcript, 0x5560), mulmod(mload(add(transcript, 0x3480)), mload(add(transcript, 0x40a0)), f_q)){            let result := mulmod(mload(add(transcript, 0x34a0)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x5580), result)        }mstore(add(transcript, 0x55a0), mulmod(mload(add(transcript, 0x5580)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x55c0), mulmod(sub(f_q, mload(add(transcript, 0x55a0))), mload(add(transcript, 0x44a0)), f_q))mstore(add(transcript, 0x55e0), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x44a0)), f_q))mstore(add(transcript, 0x5600), mulmod(mload(add(transcript, 0x5500)), mload(add(transcript, 0x44a0)), f_q))mstore(add(transcript, 0x5620), mulmod(mload(add(transcript, 0x5520)), mload(add(transcript, 0x44a0)), f_q))mstore(add(transcript, 0x5640), mulmod(mload(add(transcript, 0x5540)), mload(add(transcript, 0x44a0)), f_q))mstore(add(transcript, 0x5660), mulmod(mload(add(transcript, 0x5560)), mload(add(transcript, 0x44a0)), f_q))mstore(add(transcript, 0x5680), addmod(mload(add(transcript, 0x54e0)), mload(add(transcript, 0x55c0)), f_q)){            let result := mulmod(mload(add(transcript, 0x8a0)), mload(add(transcript, 0x3ba0)), f_q)mstore(add(transcript, 0x56a0), result)        }mstore(add(transcript, 0x56c0), mulmod(mload(add(transcript, 0x56a0)), mload(add(transcript, 0x42e0)), f_q))mstore(add(transcript, 0x56e0), mulmod(sub(f_q, mload(add(transcript, 0x56c0))), mload(add(transcript, 0x44c0)), f_q))mstore(add(transcript, 0x5700), mulmod(mload(add(transcript, 0x4ba0)), mload(add(transcript, 0x44c0)), f_q))mstore(add(transcript, 0x5720), addmod(mload(add(transcript, 0x5680)), mload(add(transcript, 0x56e0)), f_q))mstore(add(transcript, 0x5740), mulmod(mload(add(transcript, 0x5720)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5760), mulmod(mload(add(transcript, 0x4c20)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5780), mulmod(mload(add(transcript, 0x4ca0)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x57a0), mulmod(mload(add(transcript, 0x4d40)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x57c0), mulmod(mload(add(transcript, 0x4de0)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x57e0), mulmod(mload(add(transcript, 0x4e80)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5800), mulmod(mload(add(transcript, 0x4f20)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5820), mulmod(mload(add(transcript, 0x4fc0)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5840), mulmod(mload(add(transcript, 0x5060)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5860), mulmod(mload(add(transcript, 0x5100)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5880), mulmod(mload(add(transcript, 0x51a0)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x58a0), mulmod(mload(add(transcript, 0x5240)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x58c0), mulmod(mload(add(transcript, 0x52e0)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x58e0), mulmod(mload(add(transcript, 0x5380)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5900), mulmod(mload(add(transcript, 0x5420)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5920), mulmod(mload(add(transcript, 0x54c0)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5940), mulmod(mload(add(transcript, 0x55e0)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5960), mulmod(mload(add(transcript, 0x5600)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5980), mulmod(mload(add(transcript, 0x5620)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x59a0), mulmod(mload(add(transcript, 0x5640)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x59c0), mulmod(mload(add(transcript, 0x5660)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x59e0), mulmod(mload(add(transcript, 0x5700)), mload(add(transcript, 0x4560)), f_q))mstore(add(transcript, 0x5a00), addmod(mload(add(transcript, 0x4b80)), mload(add(transcript, 0x5740)), f_q))mstore(add(transcript, 0x5a20), mulmod(1, mload(add(transcript, 0x38a0)), f_q))mstore(add(transcript, 0x5a40), mulmod(1, mload(add(transcript, 0xbe0)), f_q))mstore(add(transcript, 0x5a60), 0x0000000000000000000000000000000000000000000000000000000000000001)                    mstore(add(transcript, 0x5a80), 0x0000000000000000000000000000000000000000000000000000000000000002)mstore(add(transcript, 0x5aa0), mload(add(transcript, 0x5a00)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5a60), 0x60, add(transcript, 0x5a60), 0x40), 1), success)mstore(add(transcript, 0x5ac0), mload(add(transcript, 0x5a60)))                    mstore(add(transcript, 0x5ae0), mload(add(transcript, 0x5a80)))mstore(add(transcript, 0x5b00), mload(add(transcript, 0x80)))                    mstore(add(transcript, 0x5b20), mload(add(transcript, 0xa0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5ac0), 0x80, add(transcript, 0x5ac0), 0x40), 1), success)mstore(add(transcript, 0x5b40), mload(add(transcript, 0xc0)))                    mstore(add(transcript, 0x5b60), mload(add(transcript, 0xe0)))mstore(add(transcript, 0x5b80), mload(add(transcript, 0x46c0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5b40), 0x60, add(transcript, 0x5b40), 0x40), 1), success)mstore(add(transcript, 0x5ba0), mload(add(transcript, 0x5ac0)))                    mstore(add(transcript, 0x5bc0), mload(add(transcript, 0x5ae0)))mstore(add(transcript, 0x5be0), mload(add(transcript, 0x5b40)))                    mstore(add(transcript, 0x5c00), mload(add(transcript, 0x5b60)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5ba0), 0x80, add(transcript, 0x5ba0), 0x40), 1), success)mstore(add(transcript, 0x5c20), mload(add(transcript, 0x100)))                    mstore(add(transcript, 0x5c40), mload(add(transcript, 0x120)))mstore(add(transcript, 0x5c60), mload(add(transcript, 0x47a0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5c20), 0x60, add(transcript, 0x5c20), 0x40), 1), success)mstore(add(transcript, 0x5c80), mload(add(transcript, 0x5ba0)))                    mstore(add(transcript, 0x5ca0), mload(add(transcript, 0x5bc0)))mstore(add(transcript, 0x5cc0), mload(add(transcript, 0x5c20)))                    mstore(add(transcript, 0x5ce0), mload(add(transcript, 0x5c40)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5c80), 0x80, add(transcript, 0x5c80), 0x40), 1), success)mstore(add(transcript, 0x5d00), mload(add(transcript, 0x2e0)))                    mstore(add(transcript, 0x5d20), mload(add(transcript, 0x300)))mstore(add(transcript, 0x5d40), mload(add(transcript, 0x48a0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5d00), 0x60, add(transcript, 0x5d00), 0x40), 1), success)mstore(add(transcript, 0x5d60), mload(add(transcript, 0x5c80)))                    mstore(add(transcript, 0x5d80), mload(add(transcript, 0x5ca0)))mstore(add(transcript, 0x5da0), mload(add(transcript, 0x5d00)))                    mstore(add(transcript, 0x5dc0), mload(add(transcript, 0x5d20)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5d60), 0x80, add(transcript, 0x5d60), 0x40), 1), success)mstore(add(transcript, 0x5de0), mload(add(transcript, 0x320)))                    mstore(add(transcript, 0x5e00), mload(add(transcript, 0x340)))mstore(add(transcript, 0x5e20), mload(add(transcript, 0x4a40)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5de0), 0x60, add(transcript, 0x5de0), 0x40), 1), success)mstore(add(transcript, 0x5e40), mload(add(transcript, 0x5d60)))                    mstore(add(transcript, 0x5e60), mload(add(transcript, 0x5d80)))mstore(add(transcript, 0x5e80), mload(add(transcript, 0x5de0)))                    mstore(add(transcript, 0x5ea0), mload(add(transcript, 0x5e00)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5e40), 0x80, add(transcript, 0x5e40), 0x40), 1), success)mstore(add(transcript, 0x5ec0), mload(add(transcript, 0x360)))                    mstore(add(transcript, 0x5ee0), mload(add(transcript, 0x380)))mstore(add(transcript, 0x5f00), mload(add(transcript, 0x4a60)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5ec0), 0x60, add(transcript, 0x5ec0), 0x40), 1), success)mstore(add(transcript, 0x5f20), mload(add(transcript, 0x5e40)))                    mstore(add(transcript, 0x5f40), mload(add(transcript, 0x5e60)))mstore(add(transcript, 0x5f60), mload(add(transcript, 0x5ec0)))                    mstore(add(transcript, 0x5f80), mload(add(transcript, 0x5ee0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5f20), 0x80, add(transcript, 0x5f20), 0x40), 1), success)mstore(add(transcript, 0x5fa0), mload(add(transcript, 0x1a0)))                    mstore(add(transcript, 0x5fc0), mload(add(transcript, 0x1c0)))mstore(add(transcript, 0x5fe0), mload(add(transcript, 0x4b60)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5fa0), 0x60, add(transcript, 0x5fa0), 0x40), 1), success)mstore(add(transcript, 0x6000), mload(add(transcript, 0x5f20)))                    mstore(add(transcript, 0x6020), mload(add(transcript, 0x5f40)))mstore(add(transcript, 0x6040), mload(add(transcript, 0x5fa0)))                    mstore(add(transcript, 0x6060), mload(add(transcript, 0x5fc0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6000), 0x80, add(transcript, 0x6000), 0x40), 1), success)mstore(add(transcript, 0x6080), mload(add(transcript, 0x1e0)))                    mstore(add(transcript, 0x60a0), mload(add(transcript, 0x200)))mstore(add(transcript, 0x60c0), mload(add(transcript, 0x5760)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6080), 0x60, add(transcript, 0x6080), 0x40), 1), success)mstore(add(transcript, 0x60e0), mload(add(transcript, 0x6000)))                    mstore(add(transcript, 0x6100), mload(add(transcript, 0x6020)))mstore(add(transcript, 0x6120), mload(add(transcript, 0x6080)))                    mstore(add(transcript, 0x6140), mload(add(transcript, 0x60a0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x60e0), 0x80, add(transcript, 0x60e0), 0x40), 1), success)mstore(add(transcript, 0x6160), 0x1cdacd914ab85fa6c853e2bdbf7d742f0c46c81f5f13e759a888c9d09c99c57c)                    mstore(add(transcript, 0x6180), 0x02d27a5e8b2c8ac9adfc4a9314c8fb8f4ff1c6795024733378af45d3a982db45)mstore(add(transcript, 0x61a0), mload(add(transcript, 0x5780)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6160), 0x60, add(transcript, 0x6160), 0x40), 1), success)mstore(add(transcript, 0x61c0), mload(add(transcript, 0x60e0)))                    mstore(add(transcript, 0x61e0), mload(add(transcript, 0x6100)))mstore(add(transcript, 0x6200), mload(add(transcript, 0x6160)))                    mstore(add(transcript, 0x6220), mload(add(transcript, 0x6180)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x61c0), 0x80, add(transcript, 0x61c0), 0x40), 1), success)mstore(add(transcript, 0x6240), 0x2fddddec7275bff0ed93f883fc35cbcaacf7e3477e4408e52b7542aa77ede797)                    mstore(add(transcript, 0x6260), 0x00c28e51804e86a46ff4dd8fb1f3cffdd62836626fe4a6719b3c55b7ba18bc13)mstore(add(transcript, 0x6280), mload(add(transcript, 0x57a0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6240), 0x60, add(transcript, 0x6240), 0x40), 1), success)mstore(add(transcript, 0x62a0), mload(add(transcript, 0x61c0)))                    mstore(add(transcript, 0x62c0), mload(add(transcript, 0x61e0)))mstore(add(transcript, 0x62e0), mload(add(transcript, 0x6240)))                    mstore(add(transcript, 0x6300), mload(add(transcript, 0x6260)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x62a0), 0x80, add(transcript, 0x62a0), 0x40), 1), success)mstore(add(transcript, 0x6320), 0x21597919b79cb5dfe86e814d1202ad9282f972b18fd7e56decb1a0be84fda93a)                    mstore(add(transcript, 0x6340), 0x046237988a71cc7fffadf9b33ba1283a0fd51ab9a8dd5ece32a1c7629cd7a243)mstore(add(transcript, 0x6360), mload(add(transcript, 0x57c0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6320), 0x60, add(transcript, 0x6320), 0x40), 1), success)mstore(add(transcript, 0x6380), mload(add(transcript, 0x62a0)))                    mstore(add(transcript, 0x63a0), mload(add(transcript, 0x62c0)))mstore(add(transcript, 0x63c0), mload(add(transcript, 0x6320)))                    mstore(add(transcript, 0x63e0), mload(add(transcript, 0x6340)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6380), 0x80, add(transcript, 0x6380), 0x40), 1), success)mstore(add(transcript, 0x6400), 0x2c4821d0e5502d4cf5cc4734317c2d1c6a609c6ab8064e98055c41af13a33395)                    mstore(add(transcript, 0x6420), 0x1b185a9f071b30fdb108c9cd30a8aa1e196da48dbfce3ad4c08f1f90babfc363)mstore(add(transcript, 0x6440), mload(add(transcript, 0x57e0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6400), 0x60, add(transcript, 0x6400), 0x40), 1), success)mstore(add(transcript, 0x6460), mload(add(transcript, 0x6380)))                    mstore(add(transcript, 0x6480), mload(add(transcript, 0x63a0)))mstore(add(transcript, 0x64a0), mload(add(transcript, 0x6400)))                    mstore(add(transcript, 0x64c0), mload(add(transcript, 0x6420)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6460), 0x80, add(transcript, 0x6460), 0x40), 1), success)mstore(add(transcript, 0x64e0), 0x10464ed6a25ef3c0808349cd80eb60c5606f4804d2520954c0bb3582f003869a)                    mstore(add(transcript, 0x6500), 0x275063dc85c2bde97c88762c0ff47073621f7f6432859d56cf7f86be312f94ec)mstore(add(transcript, 0x6520), mload(add(transcript, 0x5800)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x64e0), 0x60, add(transcript, 0x64e0), 0x40), 1), success)mstore(add(transcript, 0x6540), mload(add(transcript, 0x6460)))                    mstore(add(transcript, 0x6560), mload(add(transcript, 0x6480)))mstore(add(transcript, 0x6580), mload(add(transcript, 0x64e0)))                    mstore(add(transcript, 0x65a0), mload(add(transcript, 0x6500)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6540), 0x80, add(transcript, 0x6540), 0x40), 1), success)mstore(add(transcript, 0x65c0), 0x1ce9a7e8cf481b047b5a9951669b8de8ae457719bfb6fa287ed62d85ff0bb6f6)                    mstore(add(transcript, 0x65e0), 0x15485ca60daa93f9207ccb479d20b2dfd19332a6a04b4050e1c3a9830efc1bae)mstore(add(transcript, 0x6600), mload(add(transcript, 0x5820)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x65c0), 0x60, add(transcript, 0x65c0), 0x40), 1), success)mstore(add(transcript, 0x6620), mload(add(transcript, 0x6540)))                    mstore(add(transcript, 0x6640), mload(add(transcript, 0x6560)))mstore(add(transcript, 0x6660), mload(add(transcript, 0x65c0)))                    mstore(add(transcript, 0x6680), mload(add(transcript, 0x65e0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6620), 0x80, add(transcript, 0x6620), 0x40), 1), success)mstore(add(transcript, 0x66a0), 0x237e58c17a718e63b85f770a4bb54e1a545bf9c7fade00478a076f0088e4db49)                    mstore(add(transcript, 0x66c0), 0x2524f18cbcad3410dd7ebe33da5c85c88adf745aa3115b2f098c48d999acf9bc)mstore(add(transcript, 0x66e0), mload(add(transcript, 0x5840)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x66a0), 0x60, add(transcript, 0x66a0), 0x40), 1), success)mstore(add(transcript, 0x6700), mload(add(transcript, 0x6620)))                    mstore(add(transcript, 0x6720), mload(add(transcript, 0x6640)))mstore(add(transcript, 0x6740), mload(add(transcript, 0x66a0)))                    mstore(add(transcript, 0x6760), mload(add(transcript, 0x66c0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6700), 0x80, add(transcript, 0x6700), 0x40), 1), success)mstore(add(transcript, 0x6780), 0x2c823757025ec3da2dcac352f88b7a2012b0139afae1c16ea3dfb57aad51ba99)                    mstore(add(transcript, 0x67a0), 0x1c322f49a70bc465f2d4f858eb91d7f93fd978c453dec6b1f049894148b543ca)mstore(add(transcript, 0x67c0), mload(add(transcript, 0x5860)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6780), 0x60, add(transcript, 0x6780), 0x40), 1), success)mstore(add(transcript, 0x67e0), mload(add(transcript, 0x6700)))                    mstore(add(transcript, 0x6800), mload(add(transcript, 0x6720)))mstore(add(transcript, 0x6820), mload(add(transcript, 0x6780)))                    mstore(add(transcript, 0x6840), mload(add(transcript, 0x67a0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x67e0), 0x80, add(transcript, 0x67e0), 0x40), 1), success)mstore(add(transcript, 0x6860), 0x08ab709b333aea5f62c1143c7da4eee7d46bcba6a57a4f14d6c1a994a6273e46)                    mstore(add(transcript, 0x6880), 0x017470e774800bc55425d00a31055cfa0287c12fa9e14537ca311ef89eba1122)mstore(add(transcript, 0x68a0), mload(add(transcript, 0x5880)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6860), 0x60, add(transcript, 0x6860), 0x40), 1), success)mstore(add(transcript, 0x68c0), mload(add(transcript, 0x67e0)))                    mstore(add(transcript, 0x68e0), mload(add(transcript, 0x6800)))mstore(add(transcript, 0x6900), mload(add(transcript, 0x6860)))                    mstore(add(transcript, 0x6920), mload(add(transcript, 0x6880)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x68c0), 0x80, add(transcript, 0x68c0), 0x40), 1), success)mstore(add(transcript, 0x6940), 0x1c534f297979717487e36226335c8ca56f194622acfd60ba13e4d7dc4126d0a0)                    mstore(add(transcript, 0x6960), 0x0efadb0ab2ca6beef5a6092920fe56db2675c904087e9700c37f0bb9c133c869)mstore(add(transcript, 0x6980), mload(add(transcript, 0x58a0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6940), 0x60, add(transcript, 0x6940), 0x40), 1), success)mstore(add(transcript, 0x69a0), mload(add(transcript, 0x68c0)))                    mstore(add(transcript, 0x69c0), mload(add(transcript, 0x68e0)))mstore(add(transcript, 0x69e0), mload(add(transcript, 0x6940)))                    mstore(add(transcript, 0x6a00), mload(add(transcript, 0x6960)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x69a0), 0x80, add(transcript, 0x69a0), 0x40), 1), success)mstore(add(transcript, 0x6a20), 0x0027f38cfb35dbf1db8a74a4b65273f26df40707abe52836d4c6ce9e96bcf282)                    mstore(add(transcript, 0x6a40), 0x26e84302f9462a0c27b4dc51d7514790c1b0068ec7da14765ac31eaebc1ee235)mstore(add(transcript, 0x6a60), mload(add(transcript, 0x58c0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6a20), 0x60, add(transcript, 0x6a20), 0x40), 1), success)mstore(add(transcript, 0x6a80), mload(add(transcript, 0x69a0)))                    mstore(add(transcript, 0x6aa0), mload(add(transcript, 0x69c0)))mstore(add(transcript, 0x6ac0), mload(add(transcript, 0x6a20)))                    mstore(add(transcript, 0x6ae0), mload(add(transcript, 0x6a40)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6a80), 0x80, add(transcript, 0x6a80), 0x40), 1), success)mstore(add(transcript, 0x6b00), 0x0743ea40f14084db2673217283aa053f986896ee7c181f52118442e99c452974)                    mstore(add(transcript, 0x6b20), 0x0203e3493a2594ece57d22cc75dd081ac68271ec7c758153cfd2152bfb5c19e3)mstore(add(transcript, 0x6b40), mload(add(transcript, 0x58e0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6b00), 0x60, add(transcript, 0x6b00), 0x40), 1), success)mstore(add(transcript, 0x6b60), mload(add(transcript, 0x6a80)))                    mstore(add(transcript, 0x6b80), mload(add(transcript, 0x6aa0)))mstore(add(transcript, 0x6ba0), mload(add(transcript, 0x6b00)))                    mstore(add(transcript, 0x6bc0), mload(add(transcript, 0x6b20)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6b60), 0x80, add(transcript, 0x6b60), 0x40), 1), success)mstore(add(transcript, 0x6be0), 0x2c42efb3d0282b9959ec8836e3a8c0dc7efbafa4b1da31782916d92e87921756)                    mstore(add(transcript, 0x6c00), 0x28506a7967bf23824f099ebbb36bfecce17e9ad44edfb1b12815394bd05d820b)mstore(add(transcript, 0x6c20), mload(add(transcript, 0x5900)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6be0), 0x60, add(transcript, 0x6be0), 0x40), 1), success)mstore(add(transcript, 0x6c40), mload(add(transcript, 0x6b60)))                    mstore(add(transcript, 0x6c60), mload(add(transcript, 0x6b80)))mstore(add(transcript, 0x6c80), mload(add(transcript, 0x6be0)))                    mstore(add(transcript, 0x6ca0), mload(add(transcript, 0x6c00)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6c40), 0x80, add(transcript, 0x6c40), 0x40), 1), success)mstore(add(transcript, 0x6cc0), 0x2e59ec0ee1d38f0e7bcb3eff9e2a1fc1740078098acf80e0f9e625900273d751)                    mstore(add(transcript, 0x6ce0), 0x02fe94a703ebd895731ccecf5fc83d96fe448d880ffcc6d82a5eb95f85e1264c)mstore(add(transcript, 0x6d00), mload(add(transcript, 0x5920)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6cc0), 0x60, add(transcript, 0x6cc0), 0x40), 1), success)mstore(add(transcript, 0x6d20), mload(add(transcript, 0x6c40)))                    mstore(add(transcript, 0x6d40), mload(add(transcript, 0x6c60)))mstore(add(transcript, 0x6d60), mload(add(transcript, 0x6cc0)))                    mstore(add(transcript, 0x6d80), mload(add(transcript, 0x6ce0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6d20), 0x80, add(transcript, 0x6d20), 0x40), 1), success)mstore(add(transcript, 0x6da0), mload(add(transcript, 0x440)))                    mstore(add(transcript, 0x6dc0), mload(add(transcript, 0x460)))mstore(add(transcript, 0x6de0), mload(add(transcript, 0x5940)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6da0), 0x60, add(transcript, 0x6da0), 0x40), 1), success)mstore(add(transcript, 0x6e00), mload(add(transcript, 0x6d20)))                    mstore(add(transcript, 0x6e20), mload(add(transcript, 0x6d40)))mstore(add(transcript, 0x6e40), mload(add(transcript, 0x6da0)))                    mstore(add(transcript, 0x6e60), mload(add(transcript, 0x6dc0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6e00), 0x80, add(transcript, 0x6e00), 0x40), 1), success)mstore(add(transcript, 0x6e80), mload(add(transcript, 0x480)))                    mstore(add(transcript, 0x6ea0), mload(add(transcript, 0x4a0)))mstore(add(transcript, 0x6ec0), mload(add(transcript, 0x5960)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6e80), 0x60, add(transcript, 0x6e80), 0x40), 1), success)mstore(add(transcript, 0x6ee0), mload(add(transcript, 0x6e00)))                    mstore(add(transcript, 0x6f00), mload(add(transcript, 0x6e20)))mstore(add(transcript, 0x6f20), mload(add(transcript, 0x6e80)))                    mstore(add(transcript, 0x6f40), mload(add(transcript, 0x6ea0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6ee0), 0x80, add(transcript, 0x6ee0), 0x40), 1), success)mstore(add(transcript, 0x6f60), mload(add(transcript, 0x4c0)))                    mstore(add(transcript, 0x6f80), mload(add(transcript, 0x4e0)))mstore(add(transcript, 0x6fa0), mload(add(transcript, 0x5980)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6f60), 0x60, add(transcript, 0x6f60), 0x40), 1), success)mstore(add(transcript, 0x6fc0), mload(add(transcript, 0x6ee0)))                    mstore(add(transcript, 0x6fe0), mload(add(transcript, 0x6f00)))mstore(add(transcript, 0x7000), mload(add(transcript, 0x6f60)))                    mstore(add(transcript, 0x7020), mload(add(transcript, 0x6f80)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6fc0), 0x80, add(transcript, 0x6fc0), 0x40), 1), success)mstore(add(transcript, 0x7040), mload(add(transcript, 0x500)))                    mstore(add(transcript, 0x7060), mload(add(transcript, 0x520)))mstore(add(transcript, 0x7080), mload(add(transcript, 0x59a0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x7040), 0x60, add(transcript, 0x7040), 0x40), 1), success)mstore(add(transcript, 0x70a0), mload(add(transcript, 0x6fc0)))                    mstore(add(transcript, 0x70c0), mload(add(transcript, 0x6fe0)))mstore(add(transcript, 0x70e0), mload(add(transcript, 0x7040)))                    mstore(add(transcript, 0x7100), mload(add(transcript, 0x7060)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x70a0), 0x80, add(transcript, 0x70a0), 0x40), 1), success)mstore(add(transcript, 0x7120), mload(add(transcript, 0x540)))                    mstore(add(transcript, 0x7140), mload(add(transcript, 0x560)))mstore(add(transcript, 0x7160), mload(add(transcript, 0x59c0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x7120), 0x60, add(transcript, 0x7120), 0x40), 1), success)mstore(add(transcript, 0x7180), mload(add(transcript, 0x70a0)))                    mstore(add(transcript, 0x71a0), mload(add(transcript, 0x70c0)))mstore(add(transcript, 0x71c0), mload(add(transcript, 0x7120)))                    mstore(add(transcript, 0x71e0), mload(add(transcript, 0x7140)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x7180), 0x80, add(transcript, 0x7180), 0x40), 1), success)mstore(add(transcript, 0x7200), mload(add(transcript, 0x3a0)))                    mstore(add(transcript, 0x7220), mload(add(transcript, 0x3c0)))mstore(add(transcript, 0x7240), mload(add(transcript, 0x59e0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x7200), 0x60, add(transcript, 0x7200), 0x40), 1), success)mstore(add(transcript, 0x7260), mload(add(transcript, 0x7180)))                    mstore(add(transcript, 0x7280), mload(add(transcript, 0x71a0)))mstore(add(transcript, 0x72a0), mload(add(transcript, 0x7200)))                    mstore(add(transcript, 0x72c0), mload(add(transcript, 0x7220)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x7260), 0x80, add(transcript, 0x7260), 0x40), 1), success)mstore(add(transcript, 0x72e0), mload(add(transcript, 0xb80)))                    mstore(add(transcript, 0x7300), mload(add(transcript, 0xba0)))mstore(add(transcript, 0x7320), sub(f_q, mload(add(transcript, 0x5a20))))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x72e0), 0x60, add(transcript, 0x72e0), 0x40), 1), success)mstore(add(transcript, 0x7340), mload(add(transcript, 0x7260)))                    mstore(add(transcript, 0x7360), mload(add(transcript, 0x7280)))mstore(add(transcript, 0x7380), mload(add(transcript, 0x72e0)))                    mstore(add(transcript, 0x73a0), mload(add(transcript, 0x7300)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x7340), 0x80, add(transcript, 0x7340), 0x40), 1), success)mstore(add(transcript, 0x73c0), mload(add(transcript, 0xc20)))                    mstore(add(transcript, 0x73e0), mload(add(transcript, 0xc40)))mstore(add(transcript, 0x7400), mload(add(transcript, 0x5a40)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x73c0), 0x60, add(transcript, 0x73c0), 0x40), 1), success)mstore(add(transcript, 0x7420), mload(add(transcript, 0x7340)))                    mstore(add(transcript, 0x7440), mload(add(transcript, 0x7360)))mstore(add(transcript, 0x7460), mload(add(transcript, 0x73c0)))                    mstore(add(transcript, 0x7480), mload(add(transcript, 0x73e0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x7420), 0x80, add(transcript, 0x7420), 0x40), 1), success)mstore(add(transcript, 0x74a0), mload(add(transcript, 0x7420)))                    mstore(add(transcript, 0x74c0), mload(add(transcript, 0x7440)))mstore(add(transcript, 0x74e0), 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)            mstore(add(transcript, 0x7500), 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)            mstore(add(transcript, 0x7520), 0x090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)            mstore(add(transcript, 0x7540), 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)mstore(add(transcript, 0x7560), mload(add(transcript, 0xc20)))                    mstore(add(transcript, 0x7580), mload(add(transcript, 0xc40)))mstore(add(transcript, 0x75a0), 0x26186a2d65ee4d2f9c9a5b91f86597d35f192cd120caf7e935d8443d1938e23d)            mstore(add(transcript, 0x75c0), 0x30441fd1b5d3370482c42152a8899027716989a6996c2535bc9f7fee8aaef79e)            mstore(add(transcript, 0x75e0), 0x16f363f103c80d7bbc8ad3c6867e0822bbc6000be91a4689755c7df40221c145)            mstore(add(transcript, 0x7600), 0x2b1cbb3e521edf5a622d82762a44a5e63f1e50b332d71154a4a7958d6011deff)success := and(eq(staticcall(gas(), 0x8, add(transcript, 0x74a0), 0x180, add(transcript, 0x74a0), 0x20), 1), success)success := and(eq(mload(add(transcript, 0x74a0)), 1), success)} return success; } }
